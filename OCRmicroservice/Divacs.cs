// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: divacs.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Paycasso.Divacs.Protocol
{

    /// <summary>Holder for reflection information generated from divacs.proto</summary>
    public static partial class DivacsReflection
    {

        #region Descriptor
        /// <summary>File descriptor for divacs.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static DivacsReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "CgxkaXZhY3MucHJvdG8SHGNvbS5wYXljYXNzby5kaXZhY3MucHJvdG9jb2wa",
                  "GWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8iSQoIRW52ZWxvcGUSFgoOY29y",
                  "cmVsYXRpb25faWQYASABKAkSJQoHcGF5bG9hZBgCIAEoCzIULmdvb2dsZS5w",
                  "cm90b2J1Zi5BbnkisgUKB01lc3NhZ2USFgoOdHJhbnNhY3Rpb25faWQYASAB",
                  "KAkSQwoHaGVhZGVycxgCIAMoCzIyLmNvbS5wYXljYXNzby5kaXZhY3MucHJv",
                  "dG9jb2wuTWVzc2FnZS5IZWFkZXJzRW50cnkSSwoRY2xhc3NpZnlfZG9jdW1l",
                  "bnQYAyABKAsyLi5jb20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29sLkNsYXNz",
                  "aWZ5RG9jdW1lbnRIABJOChNjbGFzc2lmeV9vY3JfcmVzdWx0GAQgASgLMi8u",
                  "Y29tLnBheWNhc3NvLmRpdmFjcy5wcm90b2NvbC5DbGFzc2lmeU9DUlJlc3Vs",
                  "dEgAEkoKCXN0YXJ0X3JlcRgFIAEoCzI1LmNvbS5wYXljYXNzby5kaXZhY3Mu",
                  "cHJvdG9jb2wuU3RhcnRUcmFuc2FjdGlvblJlcXVlc3RIABJPCgtwcm9jZXNz",
                  "X3JlcRgGIAEoCzI4LmNvbS5wYXljYXNzby5kaXZhY3MucHJvdG9jb2wuUHJv",
                  "Y2Vzc0RvY3VtZW50UGFydFJlcXVlc3RIABJNCgxwcm9jZXNzX3Jlc3AYByAB",
                  "KAsyNS5jb20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29sLlByb2Nlc3NEb2N1",
                  "bWVudFJlc3BvbnNlSAASQwoMc3VjY2Vzc19yZXNwGAggASgLMisuY29tLnBh",
                  "eWNhc3NvLmRpdmFjcy5wcm90b2NvbC5TZXJ2ZXJTdWNjZXNzSAASQwoMZmFp",
                  "bHVyZV9yZXNwGAkgASgLMisuY29tLnBheWNhc3NvLmRpdmFjcy5wcm90b2Nv",
                  "bC5TZXJ2ZXJGYWlsdXJlSAAaLgoMSGVhZGVyc0VudHJ5EgsKA2tleRgBIAEo",
                  "CRINCgV2YWx1ZRgCIAEoCToCOAFCBwoFdmFsdWUiIQoQQ2xhc3NpZnlEb2N1",
                  "bWVudBINCgVwYXJ0cxgBIAEoCSKsAgoRQ2xhc3NpZnlPQ1JSZXN1bHQSQQoN",
                  "ZG9jdW1lbnRfdHlwZRgBIAEoDjIqLmNvbS5wYXljYXNzby5kaXZhY3MucHJv",
                  "dG9jb2wuRG9jdW1lbnRUeXBlEjYKB2NvdW50cnkYAiABKA4yJS5jb20ucGF5",
                  "Y2Fzc28uZGl2YWNzLnByb3RvY29sLkNvdW50cnkSEwoLZGVzY3JpcHRpb24Y",
                  "AyABKAkSVAoLZGF0YV9yZWdpb24YBCADKAsyPy5jb20ucGF5Y2Fzc28uZGl2",
                  "YWNzLnByb3RvY29sLkNsYXNzaWZ5T0NSUmVzdWx0LkRhdGFSZWdpb25FbnRy",
                  "eRoxCg9EYXRhUmVnaW9uRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
                  "ASgJOgI4ASKcAQoXU3RhcnRUcmFuc2FjdGlvblJlcXVlc3QSHQoVdG90YWxf",
                  "bnVtYmVyX29mX3BhcnRzGAIgASgFEhQKDGNhbGxiYWNrX3VyaRgDIAEoCRJM",
                  "CgpmaXJzdF9wYXJ0GAQgASgLMjguY29tLnBheWNhc3NvLmRpdmFjcy5wcm90",
                  "b2NvbC5Qcm9jZXNzRG9jdW1lbnRQYXJ0UmVxdWVzdCI5ChpQcm9jZXNzRG9j",
                  "dW1lbnRQYXJ0UmVxdWVzdBIMCgRwYXJ0GAIgASgFEg0KBWltYWdlGAMgASgJ",
                  "IvcCChdQcm9jZXNzRG9jdW1lbnRSZXNwb25zZRJECg5jbGFzc2lmaWNhdGlv",
                  "bhgCIAEoCzIsLmNvbS5wYXljYXNzby5kaXZhY3MucHJvdG9jb2wuQ2xhc3Np",
                  "ZmljYXRpb24SOAoEZGF0YRgDIAEoCzIqLmNvbS5wYXljYXNzby5kaXZhY3Mu",
                  "cHJvdG9jb2wuRG9jdW1lbnREYXRhEj0KCHdhcm5pbmdzGAQgASgLMisuY29t",
                  "LnBheWNhc3NvLmRpdmFjcy5wcm90b2NvbC5Eb2N1bWVudENvZGVzEj8KCnJl",
                  "amVjdGlvbnMYBiABKAsyKy5jb20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29s",
                  "LkRvY3VtZW50Q29kZXMSRgoRZG9tZXN0aWNfd2FybmluZ3MYByABKAsyKy5j",
                  "b20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29sLkRvY3VtZW50Q29kZXMSFAoM",
                  "Y2FsbGJhY2tfdXJpGAUgASgJIlcKDERvY3VtZW50RGF0YRIOCgZzb3VyY2UY",
                  "ASABKAkSNwoGZmllbGRzGAIgAygLMicuY29tLnBheWNhc3NvLmRpdmFjcy5w",
                  "cm90b2NvbC5EYXRhRmllbGQiWQoJRGF0YUZpZWxkEg0KBXZhbHVlGAEgASgJ",
                  "Ei8KBHRhZ3MYAiADKA4yIS5jb20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29s",
                  "LlRhZxIMCgRuYW1lGAMgASgJIkoKDURvY3VtZW50Q29kZXMSOQoFY29kZXMY",
                  "ASADKAsyKi5jb20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29sLkRvY3VtZW50",
                  "Q29kZSI/CgxEb2N1bWVudENvZGUSDAoEY29kZRgBIAEoBRIMCgRuYW1lGAIg",
                  "ASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJIt8BCg5DbGFzc2lmaWNhdGlvbhI6",
                  "CgRpY2FvGAEgASgLMiouY29tLnBheWNhc3NvLmRpdmFjcy5wcm90b2NvbC5J",
                  "Q0FPRG9jdW1lbnRIABJCCgx1bmNsYXNzaWZpZWQYAiABKAsyKi5jb20ucGF5",
                  "Y2Fzc28uZGl2YWNzLnByb3RvY29sLlVuY2xhc3NpZmllZEgAEkQKCXNlY29u",
                  "ZGFyeRgDIAEoCzIvLmNvbS5wYXljYXNzby5kaXZhY3MucHJvdG9jb2wuU2Vj",
                  "b25kYXJ5RG9jdW1lbnRIAEIHCgV2YWx1ZSKeAQoMSUNBT0RvY3VtZW50EkEK",
                  "DWRvY3VtZW50X3R5cGUYASABKA4yKi5jb20ucGF5Y2Fzc28uZGl2YWNzLnBy",
                  "b3RvY29sLkRvY3VtZW50VHlwZRI2Cgdjb3VudHJ5GAIgASgOMiUuY29tLnBh",
                  "eWNhc3NvLmRpdmFjcy5wcm90b2NvbC5Db3VudHJ5EhMKC2Rlc2NyaXB0aW9u",
                  "GAMgASgJIg4KDFVuY2xhc3NpZmllZCI9Cg1TZXJ2ZXJGYWlsdXJlEg8KB21l",
                  "c3NhZ2UYASABKAkSGwoTdGhyb3dhYmxlX2FzX3N0cmluZxgCIAEoCSIgCg1T",
                  "ZXJ2ZXJTdWNjZXNzEg8KB21lc3NhZ2UYASABKAkiYAoRU2Vjb25kYXJ5RG9j",
                  "dW1lbnQSNgoHY291bnRyeRgBIAEoDjIlLmNvbS5wYXljYXNzby5kaXZhY3Mu",
                  "cHJvdG9jb2wuQ291bnRyeRITCgtkZXNjcmlwdGlvbhgCIAEoCSrUDAoDVGFn",
                  "EgoKBlBFUlNPThAAEggKBERBVEUQARIICgROQU1FEAISDQoJRlVMTF9OQU1F",
                  "EAMSDgoKRklSU1RfTkFNRRAEEg0KCUxBU1RfTkFNRRAFEhEKDURBVEVfT0Zf",
                  "QklSVEgQBhISCg5QTEFDRV9PRl9CSVJUSBAHEg8KC05BVElPTkFMSVRZEAgS",
                  "EwoPUEVSU09OQUxfTlVNQkVSEAkSCgoGR0VOREVSEAoSIgoeTkFUSU9OQUxf",
                  "SURFTlRJRklDQVRJT05fTlVNQkVSEAsSCwoHQUREUkVTUxAMEgoKBlNUUkVF",
                  "VBANEgwKCFNUUkVFVF8xEA4SDAoIU1RSRUVUXzIQDxIMCghTVFJFRVRfMxAQ",
                  "EggKBENJVFkQERIJCgVTVEFURRASEgwKCFBPU1RDT0RFEBMSDQoJUkVTSURF",
                  "TkNFEBQSDAoIRE9DVU1FTlQQFRITCg9ET0NVTUVOVF9OVU1CRVIQFhIhCh1J",
                  "U1NVSU5HX1NUQVRFX09SX09SR0FOSVpBVElPThAXEhIKDkRBVEVfT0ZfRVhQ",
                  "SVJZEBgSEQoNREFURV9PRl9JU1NVRRAZEg0KCVNJR05fREFURRAaEhMKD1ZB",
                  "TElEX0ZST01fREFURRAbEg8KC0NJVElaRU5TSElQEBwSDAoIUkVMSUdJT04Q",
                  "HRILCgdDT1VOVFJZEB4SCQoFRlJPTlQQHxIICgRCQUNLECASCgoGTlVNQkVS",
                  "ECESDwoLQ0FSRF9OVU1CRVIQIhIHCgNNUloQIxIICgRNUloxECQSCAoETVJa",
                  "MhAlEggKBE1SWjMQJhIPCgtDSEVDS19ESUdJVBAnEgkKBVZBTElEECgSCAoE",
                  "VFlQRRApEgwKCFNVQl9UWVBFECoSDAoIT1BUSU9OQUwQKxINCglPUFRJT05B",
                  "TDEQLBINCglPUFRJT05BTDIQLRIKCgZTVEFUVVMQLhIJCgVET05PUhAvEgsK",
                  "B1ZFUlNJT04QMBILCgdCQVJDT0RFEDESEAoMRFlOQU1JQ19EQVRBEDISDwoL",
                  "TUlERExFX05BTUUQMxIQCgxFTkRPUlNFTUVOVFMQNBITCg9QTEFDRV9PRl9C",
                  "SVJUSDIQNRILCgdQQVJFTlRTEDYSBwoDUk9JEGMSCAoEUk9JRhBkEgoKBlJP",
                  "SUYwMRBlEgoKBlJPSUYwMhBmEgoKBlJPSUYwMxBnEgoKBlJPSUYwNBBoEgoK",
                  "BlJPSUYwNRBpEgoKBlJPSUYwNhBqEgoKBlJPSUYwNxBrEgoKBlJPSUYwOBBs",
                  "EgoKBlJPSUYwORBtEgoKBlJPSUYxMBBuEgoKBlJPSUYxMRBvEgoKBlJPSUYx",
                  "MhBwEgoKBlJPSUYxMxBxEgoKBlJPSUYxNBByEgoKBlJPSUYxNRBzEgoKBlJP",
                  "SUYxNhB0EgoKBlJPSUYxNxB1EgoKBlJPSUYxOBB2EgoKBlJPSUYxORB3EgoK",
                  "BlJPSUYyMBB4EgkKBFJPSUIQlgESCwoGUk9JQjAxEJcBEgsKBlJPSUIwMhCY",
                  "ARILCgZST0lCMDMQmQESCwoGUk9JQjA0EJoBEgsKBlJPSUIwNRCbARILCgZS",
                  "T0lCMDYQnAESCwoGUk9JQjA3EJ0BEgsKBlJPSUIwOBCeARILCgZST0lCMDkQ",
                  "nwESCwoGUk9JQjEwEKABEgsKBlJPSUIxMRChARILCgZST0lCMTIQowESCwoG",
                  "Uk9JQjEzEKQBEgsKBlJPSUIxNBClARILCgZST0lCMTUQpgESCwoGUk9JQjE2",
                  "EKcBEgsKBlJPSUIxNxCoARILCgZST0lCMTgQqQESCwoGUk9JQjE5EKoBEgsK",
                  "BlJPSUIyMBCrARINCghNUlpfQ09ERRDIARIKCgVNUlowMRDJARIKCgVNUlow",
                  "MhDKARIKCgVNUlowMxDLARIKCgVNUlowNBDMARIKCgVNUlowNRDNARIKCgVN",
                  "UlowNhDOARIKCgVNUlowNxDPARIKCgVNUlowOBDQARIKCgVNUlowORDRARIK",
                  "CgVNUloxMBDSARIKCgVNUloxMRDTARIKCgVNUloxMhDUARIKCgVNUloxMxDV",
                  "ARIKCgVNUloxNBDWARIKCgVNUloxNRDXARIKCgVNUloxNhDYARIKCgVNUlox",
                  "NxDZARIKCgVNUloxOBDaARIKCgVNUloxORDbARIKCgVNUloyMBDcASpqCgxE",
                  "b2N1bWVudFR5cGUSFwoTVW5rbm93bkRvY3VtZW50VHlwZRAAEhAKDElkZW50",
                  "aXR5Q2FyZBABEgwKCFBhc3Nwb3J0EAISEgoORHJpdmluZ0xpY2VuY2UQAxIN",
                  "CglTZWNvbmRhcnkQBCp5CgdDb3VudHJ5EhIKDlVua25vd25Db3VudHJ5EAAS",
                  "BwoDTVlTEAESBwoDR0JSEAISBwoDVUtSEAMSBwoDVUFFEAQSBwoDTlpMEAUS",
                  "BwoDRVNQEAYSBwoDSEtHEAcSBwoDSVJMEAgSCQoFQVVWSUMQCRIHCgNMVFUQ",
                  "CmIGcHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
                new pbr::GeneratedClrTypeInfo(new[] { typeof(global::Com.Paycasso.Divacs.Protocol.Tag), typeof(global::Com.Paycasso.Divacs.Protocol.DocumentType), typeof(global::Com.Paycasso.Divacs.Protocol.Country), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.Envelope), global::Com.Paycasso.Divacs.Protocol.Envelope.Parser, new[]{ "CorrelationId", "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.Message), global::Com.Paycasso.Divacs.Protocol.Message.Parser, new[]{ "TransactionId", "Headers", "ClassifyDocument", "ClassifyOcrResult", "StartReq", "ProcessReq", "ProcessResp", "SuccessResp", "FailureResp" }, new[]{ "Value" }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ClassifyDocument), global::Com.Paycasso.Divacs.Protocol.ClassifyDocument.Parser, new[]{ "Parts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult), global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult.Parser, new[]{ "DocumentType", "Country", "Description", "DataRegion" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest), global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest.Parser, new[]{ "TotalNumberOfParts", "CallbackUri", "FirstPart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest), global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest.Parser, new[]{ "Part", "Image" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse), global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse.Parser, new[]{ "Classification", "Data", "Warnings", "Rejections", "DomesticWarnings", "CallbackUri" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DocumentData), global::Com.Paycasso.Divacs.Protocol.DocumentData.Parser, new[]{ "Source", "Fields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DataField), global::Com.Paycasso.Divacs.Protocol.DataField.Parser, new[]{ "Value", "Tags", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DocumentCodes), global::Com.Paycasso.Divacs.Protocol.DocumentCodes.Parser, new[]{ "Codes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DocumentCode), global::Com.Paycasso.Divacs.Protocol.DocumentCode.Parser, new[]{ "Code", "Name", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.Classification), global::Com.Paycasso.Divacs.Protocol.Classification.Parser, new[]{ "Icao", "Unclassified", "Secondary" }, new[]{ "Value" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ICAODocument), global::Com.Paycasso.Divacs.Protocol.ICAODocument.Parser, new[]{ "DocumentType", "Country", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.Unclassified), global::Com.Paycasso.Divacs.Protocol.Unclassified.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ServerFailure), global::Com.Paycasso.Divacs.Protocol.ServerFailure.Parser, new[]{ "Message", "ThrowableAsString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ServerSuccess), global::Com.Paycasso.Divacs.Protocol.ServerSuccess.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.SecondaryDocument), global::Com.Paycasso.Divacs.Protocol.SecondaryDocument.Parser, new[]{ "Country", "Description" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Enums
    public enum Tag
    {
        [pbr::OriginalName("PERSON")] Person = 0,
        [pbr::OriginalName("DATE")] Date = 1,
        [pbr::OriginalName("NAME")] Name = 2,
        [pbr::OriginalName("FULL_NAME")] FullName = 3,
        [pbr::OriginalName("FIRST_NAME")] FirstName = 4,
        [pbr::OriginalName("LAST_NAME")] LastName = 5,
        [pbr::OriginalName("DATE_OF_BIRTH")] DateOfBirth = 6,
        [pbr::OriginalName("PLACE_OF_BIRTH")] PlaceOfBirth = 7,
        [pbr::OriginalName("NATIONALITY")] Nationality = 8,
        [pbr::OriginalName("PERSONAL_NUMBER")] PersonalNumber = 9,
        [pbr::OriginalName("GENDER")] Gender = 10,
        [pbr::OriginalName("NATIONAL_IDENTIFICATION_NUMBER")] NationalIdentificationNumber = 11,
        [pbr::OriginalName("ADDRESS")] Address = 12,
        [pbr::OriginalName("STREET")] Street = 13,
        [pbr::OriginalName("STREET_1")] Street1 = 14,
        [pbr::OriginalName("STREET_2")] Street2 = 15,
        [pbr::OriginalName("STREET_3")] Street3 = 16,
        [pbr::OriginalName("CITY")] City = 17,
        [pbr::OriginalName("STATE")] State = 18,
        [pbr::OriginalName("POSTCODE")] Postcode = 19,
        [pbr::OriginalName("RESIDENCE")] Residence = 20,
        [pbr::OriginalName("DOCUMENT")] Document = 21,
        [pbr::OriginalName("DOCUMENT_NUMBER")] DocumentNumber = 22,
        [pbr::OriginalName("ISSUING_STATE_OR_ORGANIZATION")] IssuingStateOrOrganization = 23,
        [pbr::OriginalName("DATE_OF_EXPIRY")] DateOfExpiry = 24,
        [pbr::OriginalName("DATE_OF_ISSUE")] DateOfIssue = 25,
        [pbr::OriginalName("SIGN_DATE")] SignDate = 26,
        [pbr::OriginalName("VALID_FROM_DATE")] ValidFromDate = 27,
        [pbr::OriginalName("CITIZENSHIP")] Citizenship = 28,
        [pbr::OriginalName("RELIGION")] Religion = 29,
        [pbr::OriginalName("COUNTRY")] Country = 30,
        [pbr::OriginalName("FRONT")] Front = 31,
        [pbr::OriginalName("BACK")] Back = 32,
        [pbr::OriginalName("NUMBER")] Number = 33,
        [pbr::OriginalName("CARD_NUMBER")] CardNumber = 34,
        [pbr::OriginalName("MRZ")] Mrz = 35,
        [pbr::OriginalName("MRZ1")] Mrz1 = 36,
        [pbr::OriginalName("MRZ2")] Mrz2 = 37,
        [pbr::OriginalName("MRZ3")] Mrz3 = 38,
        [pbr::OriginalName("CHECK_DIGIT")] CheckDigit = 39,
        [pbr::OriginalName("VALID")] Valid = 40,
        [pbr::OriginalName("TYPE")] Type = 41,
        [pbr::OriginalName("SUB_TYPE")] SubType = 42,
        [pbr::OriginalName("OPTIONAL")] Optional = 43,
        [pbr::OriginalName("OPTIONAL1")] Optional1 = 44,
        [pbr::OriginalName("OPTIONAL2")] Optional2 = 45,
        [pbr::OriginalName("STATUS")] Status = 46,
        [pbr::OriginalName("DONOR")] Donor = 47,
        [pbr::OriginalName("VERSION")] Version = 48,
        [pbr::OriginalName("BARCODE")] Barcode = 49,
        [pbr::OriginalName("DYNAMIC_DATA")] DynamicData = 50,
        [pbr::OriginalName("MIDDLE_NAME")] MiddleName = 51,
        [pbr::OriginalName("ENDORSEMENTS")] Endorsements = 52,
        [pbr::OriginalName("PLACE_OF_BIRTH2")] PlaceOfBirth2 = 53,
        [pbr::OriginalName("PARENTS")] Parents = 54,
        [pbr::OriginalName("ROI")] Roi = 99,
        [pbr::OriginalName("ROIF")] Roif = 100,
        [pbr::OriginalName("ROIF01")] Roif01 = 101,
        [pbr::OriginalName("ROIF02")] Roif02 = 102,
        [pbr::OriginalName("ROIF03")] Roif03 = 103,
        [pbr::OriginalName("ROIF04")] Roif04 = 104,
        [pbr::OriginalName("ROIF05")] Roif05 = 105,
        [pbr::OriginalName("ROIF06")] Roif06 = 106,
        [pbr::OriginalName("ROIF07")] Roif07 = 107,
        [pbr::OriginalName("ROIF08")] Roif08 = 108,
        [pbr::OriginalName("ROIF09")] Roif09 = 109,
        [pbr::OriginalName("ROIF10")] Roif10 = 110,
        [pbr::OriginalName("ROIF11")] Roif11 = 111,
        [pbr::OriginalName("ROIF12")] Roif12 = 112,
        [pbr::OriginalName("ROIF13")] Roif13 = 113,
        [pbr::OriginalName("ROIF14")] Roif14 = 114,
        [pbr::OriginalName("ROIF15")] Roif15 = 115,
        [pbr::OriginalName("ROIF16")] Roif16 = 116,
        [pbr::OriginalName("ROIF17")] Roif17 = 117,
        [pbr::OriginalName("ROIF18")] Roif18 = 118,
        [pbr::OriginalName("ROIF19")] Roif19 = 119,
        [pbr::OriginalName("ROIF20")] Roif20 = 120,
        [pbr::OriginalName("ROIB")] Roib = 150,
        [pbr::OriginalName("ROIB01")] Roib01 = 151,
        [pbr::OriginalName("ROIB02")] Roib02 = 152,
        [pbr::OriginalName("ROIB03")] Roib03 = 153,
        [pbr::OriginalName("ROIB04")] Roib04 = 154,
        [pbr::OriginalName("ROIB05")] Roib05 = 155,
        [pbr::OriginalName("ROIB06")] Roib06 = 156,
        [pbr::OriginalName("ROIB07")] Roib07 = 157,
        [pbr::OriginalName("ROIB08")] Roib08 = 158,
        [pbr::OriginalName("ROIB09")] Roib09 = 159,
        [pbr::OriginalName("ROIB10")] Roib10 = 160,
        [pbr::OriginalName("ROIB11")] Roib11 = 161,
        [pbr::OriginalName("ROIB12")] Roib12 = 163,
        [pbr::OriginalName("ROIB13")] Roib13 = 164,
        [pbr::OriginalName("ROIB14")] Roib14 = 165,
        [pbr::OriginalName("ROIB15")] Roib15 = 166,
        [pbr::OriginalName("ROIB16")] Roib16 = 167,
        [pbr::OriginalName("ROIB17")] Roib17 = 168,
        [pbr::OriginalName("ROIB18")] Roib18 = 169,
        [pbr::OriginalName("ROIB19")] Roib19 = 170,
        [pbr::OriginalName("ROIB20")] Roib20 = 171,
        [pbr::OriginalName("MRZ_CODE")] MrzCode = 200,
        [pbr::OriginalName("MRZ01")] Mrz01 = 201,
        [pbr::OriginalName("MRZ02")] Mrz02 = 202,
        [pbr::OriginalName("MRZ03")] Mrz03 = 203,
        [pbr::OriginalName("MRZ04")] Mrz04 = 204,
        [pbr::OriginalName("MRZ05")] Mrz05 = 205,
        [pbr::OriginalName("MRZ06")] Mrz06 = 206,
        [pbr::OriginalName("MRZ07")] Mrz07 = 207,
        [pbr::OriginalName("MRZ08")] Mrz08 = 208,
        [pbr::OriginalName("MRZ09")] Mrz09 = 209,
        [pbr::OriginalName("MRZ10")] Mrz10 = 210,
        [pbr::OriginalName("MRZ11")] Mrz11 = 211,
        [pbr::OriginalName("MRZ12")] Mrz12 = 212,
        [pbr::OriginalName("MRZ13")] Mrz13 = 213,
        [pbr::OriginalName("MRZ14")] Mrz14 = 214,
        [pbr::OriginalName("MRZ15")] Mrz15 = 215,
        [pbr::OriginalName("MRZ16")] Mrz16 = 216,
        [pbr::OriginalName("MRZ17")] Mrz17 = 217,
        [pbr::OriginalName("MRZ18")] Mrz18 = 218,
        [pbr::OriginalName("MRZ19")] Mrz19 = 219,
        [pbr::OriginalName("MRZ20")] Mrz20 = 220,
    }

    public enum DocumentType
    {
        [pbr::OriginalName("UnknownDocumentType")] UnknownDocumentType = 0,
        [pbr::OriginalName("IdentityCard")] IdentityCard = 1,
        [pbr::OriginalName("Passport")] Passport = 2,
        [pbr::OriginalName("DrivingLicence")] DrivingLicence = 3,
        [pbr::OriginalName("Secondary")] Secondary = 4,
    }

    public enum Country
    {
        [pbr::OriginalName("UnknownCountry")] UnknownCountry = 0,
        [pbr::OriginalName("MYS")] Mys = 1,
        [pbr::OriginalName("GBR")] Gbr = 2,
        [pbr::OriginalName("UKR")] Ukr = 3,
        [pbr::OriginalName("UAE")] Uae = 4,
        [pbr::OriginalName("NZL")] Nzl = 5,
        [pbr::OriginalName("ESP")] Esp = 6,
        [pbr::OriginalName("HKG")] Hkg = 7,
        [pbr::OriginalName("IRL")] Irl = 8,
        [pbr::OriginalName("AUVIC")] Auvic = 9,
        [pbr::OriginalName("LTU")] Ltu = 10,
    }

    #endregion

    #region Messages
    public sealed partial class Envelope : pb::IMessage<Envelope>
    {
        private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Envelope()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Envelope(Envelope other) : this()
        {
            correlationId_ = other.correlationId_;
            Payload = other.payload_ != null ? other.Payload.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Envelope Clone()
        {
            return new Envelope(this);
        }

        /// <summary>Field number for the "correlation_id" field.</summary>
        public const int CorrelationIdFieldNumber = 1;
        private string correlationId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CorrelationId
        {
            get { return correlationId_; }
            set
            {
                correlationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "payload" field.</summary>
        public const int PayloadFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Any payload_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Any Payload
        {
            get { return payload_; }
            set
            {
                payload_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Envelope);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Envelope other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (CorrelationId != other.CorrelationId) return false;
            if (!object.Equals(Payload, other.Payload)) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (CorrelationId.Length != 0) hash ^= CorrelationId.GetHashCode();
            if (payload_ != null) hash ^= Payload.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (CorrelationId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(CorrelationId);
            }
            if (payload_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Payload);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (CorrelationId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrelationId);
            }
            if (payload_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Envelope other)
        {
            if (other == null)
            {
                return;
            }
            if (other.CorrelationId.Length != 0)
            {
                CorrelationId = other.CorrelationId;
            }
            if (other.payload_ != null)
            {
                if (payload_ == null)
                {
                    payload_ = new global::Google.Protobuf.WellKnownTypes.Any();
                }
                Payload.MergeFrom(other.Payload);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            CorrelationId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (payload_ == null)
                            {
                                payload_ = new global::Google.Protobuf.WellKnownTypes.Any();
                            }
                            input.ReadMessage(payload_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Message : pb::IMessage<Message>
    {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message(Message other) : this()
        {
            transactionId_ = other.transactionId_;
            headers_ = other.headers_.Clone();
            switch (other.ValueCase)
            {
                case ValueOneofCase.ClassifyDocument:
                    ClassifyDocument = other.ClassifyDocument.Clone();
                    break;
                case ValueOneofCase.ClassifyOcrResult:
                    ClassifyOcrResult = other.ClassifyOcrResult.Clone();
                    break;
                case ValueOneofCase.StartReq:
                    StartReq = other.StartReq.Clone();
                    break;
                case ValueOneofCase.ProcessReq:
                    ProcessReq = other.ProcessReq.Clone();
                    break;
                case ValueOneofCase.ProcessResp:
                    ProcessResp = other.ProcessResp.Clone();
                    break;
                case ValueOneofCase.SuccessResp:
                    SuccessResp = other.SuccessResp.Clone();
                    break;
                case ValueOneofCase.FailureResp:
                    FailureResp = other.FailureResp.Clone();
                    break;
            }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Message Clone()
        {
            return new Message(this);
        }

        /// <summary>Field number for the "transaction_id" field.</summary>
        public const int TransactionIdFieldNumber = 1;
        private string transactionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TransactionId
        {
            get { return transactionId_; }
            set
            {
                transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "headers" field.</summary>
        public const int HeadersFieldNumber = 2;
        private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
        private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> Headers
        {
            get { return headers_; }
        }

        /// <summary>Field number for the "classify_document" field.</summary>
        public const int ClassifyDocumentFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ClassifyDocument ClassifyDocument
        {
            get { return valueCase_ == ValueOneofCase.ClassifyDocument ? (global::Com.Paycasso.Divacs.Protocol.ClassifyDocument)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ClassifyDocument;
            }
        }

        /// <summary>Field number for the "classify_ocr_result" field.</summary>
        public const int ClassifyOcrResultFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult ClassifyOcrResult
        {
            get { return valueCase_ == ValueOneofCase.ClassifyOcrResult ? (global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ClassifyOcrResult;
            }
        }

        /// <summary>Field number for the "start_req" field.</summary>
        public const int StartReqFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest StartReq
        {
            get { return valueCase_ == ValueOneofCase.StartReq ? (global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.StartReq;
            }
        }

        /// <summary>Field number for the "process_req" field.</summary>
        public const int ProcessReqFieldNumber = 6;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest ProcessReq
        {
            get { return valueCase_ == ValueOneofCase.ProcessReq ? (global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ProcessReq;
            }
        }

        /// <summary>Field number for the "process_resp" field.</summary>
        public const int ProcessRespFieldNumber = 7;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse ProcessResp
        {
            get { return valueCase_ == ValueOneofCase.ProcessResp ? (global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.ProcessResp;
            }
        }

        /// <summary>Field number for the "success_resp" field.</summary>
        public const int SuccessRespFieldNumber = 8;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ServerSuccess SuccessResp
        {
            get { return valueCase_ == ValueOneofCase.SuccessResp ? (global::Com.Paycasso.Divacs.Protocol.ServerSuccess)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.SuccessResp;
            }
        }

        /// <summary>Field number for the "failure_resp" field.</summary>
        public const int FailureRespFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ServerFailure FailureResp
        {
            get { return valueCase_ == ValueOneofCase.FailureResp ? (global::Com.Paycasso.Divacs.Protocol.ServerFailure)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.FailureResp;
            }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase
        {
            None = 0,
            ClassifyDocument = 3,
            ClassifyOcrResult = 4,
            StartReq = 5,
            ProcessReq = 6,
            ProcessResp = 7,
            SuccessResp = 8,
            FailureResp = 9,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ValueOneofCase ValueCase
        {
            get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue()
        {
            valueCase_ = ValueOneofCase.None;
            value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Message other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TransactionId != other.TransactionId) return false;
            if (!Headers.Equals(other.Headers)) return false;
            if (!object.Equals(ClassifyDocument, other.ClassifyDocument)) return false;
            if (!object.Equals(ClassifyOcrResult, other.ClassifyOcrResult)) return false;
            if (!object.Equals(StartReq, other.StartReq)) return false;
            if (!object.Equals(ProcessReq, other.ProcessReq)) return false;
            if (!object.Equals(ProcessResp, other.ProcessResp)) return false;
            if (!object.Equals(SuccessResp, other.SuccessResp)) return false;
            if (!object.Equals(FailureResp, other.FailureResp)) return false;
            if (ValueCase != other.ValueCase) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
            hash ^= Headers.GetHashCode();
            if (valueCase_ == ValueOneofCase.ClassifyDocument) hash ^= ClassifyDocument.GetHashCode();
            if (valueCase_ == ValueOneofCase.ClassifyOcrResult) hash ^= ClassifyOcrResult.GetHashCode();
            if (valueCase_ == ValueOneofCase.StartReq) hash ^= StartReq.GetHashCode();
            if (valueCase_ == ValueOneofCase.ProcessReq) hash ^= ProcessReq.GetHashCode();
            if (valueCase_ == ValueOneofCase.ProcessResp) hash ^= ProcessResp.GetHashCode();
            if (valueCase_ == ValueOneofCase.SuccessResp) hash ^= SuccessResp.GetHashCode();
            if (valueCase_ == ValueOneofCase.FailureResp) hash ^= FailureResp.GetHashCode();
            hash ^= (int)valueCase_;
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (TransactionId.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(TransactionId);
            }
            headers_.WriteTo(output, _map_headers_codec);
            if (valueCase_ == ValueOneofCase.ClassifyDocument)
            {
                output.WriteRawTag(26);
                output.WriteMessage(ClassifyDocument);
            }
            if (valueCase_ == ValueOneofCase.ClassifyOcrResult)
            {
                output.WriteRawTag(34);
                output.WriteMessage(ClassifyOcrResult);
            }
            if (valueCase_ == ValueOneofCase.StartReq)
            {
                output.WriteRawTag(42);
                output.WriteMessage(StartReq);
            }
            if (valueCase_ == ValueOneofCase.ProcessReq)
            {
                output.WriteRawTag(50);
                output.WriteMessage(ProcessReq);
            }
            if (valueCase_ == ValueOneofCase.ProcessResp)
            {
                output.WriteRawTag(58);
                output.WriteMessage(ProcessResp);
            }
            if (valueCase_ == ValueOneofCase.SuccessResp)
            {
                output.WriteRawTag(66);
                output.WriteMessage(SuccessResp);
            }
            if (valueCase_ == ValueOneofCase.FailureResp)
            {
                output.WriteRawTag(74);
                output.WriteMessage(FailureResp);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (TransactionId.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
            }
            size += headers_.CalculateSize(_map_headers_codec);
            if (valueCase_ == ValueOneofCase.ClassifyDocument)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassifyDocument);
            }
            if (valueCase_ == ValueOneofCase.ClassifyOcrResult)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassifyOcrResult);
            }
            if (valueCase_ == ValueOneofCase.StartReq)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartReq);
            }
            if (valueCase_ == ValueOneofCase.ProcessReq)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessReq);
            }
            if (valueCase_ == ValueOneofCase.ProcessResp)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProcessResp);
            }
            if (valueCase_ == ValueOneofCase.SuccessResp)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SuccessResp);
            }
            if (valueCase_ == ValueOneofCase.FailureResp)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FailureResp);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Message other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TransactionId.Length != 0)
            {
                TransactionId = other.TransactionId;
            }
            headers_.Add(other.headers_);
            switch (other.ValueCase)
            {
                case ValueOneofCase.ClassifyDocument:
                    ClassifyDocument = other.ClassifyDocument;
                    break;
                case ValueOneofCase.ClassifyOcrResult:
                    ClassifyOcrResult = other.ClassifyOcrResult;
                    break;
                case ValueOneofCase.StartReq:
                    StartReq = other.StartReq;
                    break;
                case ValueOneofCase.ProcessReq:
                    ProcessReq = other.ProcessReq;
                    break;
                case ValueOneofCase.ProcessResp:
                    ProcessResp = other.ProcessResp;
                    break;
                case ValueOneofCase.SuccessResp:
                    SuccessResp = other.SuccessResp;
                    break;
                case ValueOneofCase.FailureResp:
                    FailureResp = other.FailureResp;
                    break;
            }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            TransactionId = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            headers_.AddEntriesFrom(input, _map_headers_codec);
                            break;
                        }
                    case 26:
                        {
                            global::Com.Paycasso.Divacs.Protocol.ClassifyDocument subBuilder = new global::Com.Paycasso.Divacs.Protocol.ClassifyDocument();
                            if (valueCase_ == ValueOneofCase.ClassifyDocument)
                            {
                                subBuilder.MergeFrom(ClassifyDocument);
                            }
                            input.ReadMessage(subBuilder);
                            ClassifyDocument = subBuilder;
                            break;
                        }
                    case 34:
                        {
                            global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult subBuilder = new global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult();
                            if (valueCase_ == ValueOneofCase.ClassifyOcrResult)
                            {
                                subBuilder.MergeFrom(ClassifyOcrResult);
                            }
                            input.ReadMessage(subBuilder);
                            ClassifyOcrResult = subBuilder;
                            break;
                        }
                    case 42:
                        {
                            global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest subBuilder = new global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest();
                            if (valueCase_ == ValueOneofCase.StartReq)
                            {
                                subBuilder.MergeFrom(StartReq);
                            }
                            input.ReadMessage(subBuilder);
                            StartReq = subBuilder;
                            break;
                        }
                    case 50:
                        {
                            global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest subBuilder = new global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest();
                            if (valueCase_ == ValueOneofCase.ProcessReq)
                            {
                                subBuilder.MergeFrom(ProcessReq);
                            }
                            input.ReadMessage(subBuilder);
                            ProcessReq = subBuilder;
                            break;
                        }
                    case 58:
                        {
                            global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse subBuilder = new global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse();
                            if (valueCase_ == ValueOneofCase.ProcessResp)
                            {
                                subBuilder.MergeFrom(ProcessResp);
                            }
                            input.ReadMessage(subBuilder);
                            ProcessResp = subBuilder;
                            break;
                        }
                    case 66:
                        {
                            global::Com.Paycasso.Divacs.Protocol.ServerSuccess subBuilder = new global::Com.Paycasso.Divacs.Protocol.ServerSuccess();
                            if (valueCase_ == ValueOneofCase.SuccessResp)
                            {
                                subBuilder.MergeFrom(SuccessResp);
                            }
                            input.ReadMessage(subBuilder);
                            SuccessResp = subBuilder;
                            break;
                        }
                    case 74:
                        {
                            global::Com.Paycasso.Divacs.Protocol.ServerFailure subBuilder = new global::Com.Paycasso.Divacs.Protocol.ServerFailure();
                            if (valueCase_ == ValueOneofCase.FailureResp)
                            {
                                subBuilder.MergeFrom(FailureResp);
                            }
                            input.ReadMessage(subBuilder);
                            FailureResp = subBuilder;
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ClassifyDocument : pb::IMessage<ClassifyDocument>
    {
        private static readonly pb::MessageParser<ClassifyDocument> _parser = new pb::MessageParser<ClassifyDocument>(() => new ClassifyDocument());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClassifyDocument> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClassifyDocument()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClassifyDocument(ClassifyDocument other) : this()
        {
            parts_ = other.parts_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClassifyDocument Clone()
        {
            return new ClassifyDocument(this);
        }

        /// <summary>Field number for the "parts" field.</summary>
        public const int PartsFieldNumber = 1;
        private string parts_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Parts
        {
            get { return parts_; }
            set
            {
                parts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ClassifyDocument);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClassifyDocument other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Parts != other.Parts) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Parts.Length != 0) hash ^= Parts.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Parts.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Parts);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Parts.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Parts);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClassifyDocument other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Parts.Length != 0)
            {
                Parts = other.Parts;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Parts = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ClassifyOCRResult : pb::IMessage<ClassifyOCRResult>
    {
        private static readonly pb::MessageParser<ClassifyOCRResult> _parser = new pb::MessageParser<ClassifyOCRResult>(() => new ClassifyOCRResult());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ClassifyOCRResult> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClassifyOCRResult()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClassifyOCRResult(ClassifyOCRResult other) : this()
        {
            documentType_ = other.documentType_;
            country_ = other.country_;
            description_ = other.description_;
            dataRegion_ = other.dataRegion_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ClassifyOCRResult Clone()
        {
            return new ClassifyOCRResult(this);
        }

        /// <summary>Field number for the "document_type" field.</summary>
        public const int DocumentTypeFieldNumber = 1;
        private global::Com.Paycasso.Divacs.Protocol.DocumentType documentType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.DocumentType DocumentType
        {
            get { return documentType_; }
            set
            {
                documentType_ = value;
            }
        }

        /// <summary>Field number for the "country" field.</summary>
        public const int CountryFieldNumber = 2;
        private global::Com.Paycasso.Divacs.Protocol.Country country_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.Country Country
        {
            get { return country_; }
            set
            {
                country_ = value;
            }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description
        {
            get { return description_; }
            set
            {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "data_region" field.</summary>
        public const int DataRegionFieldNumber = 4;
        private static readonly pbc::MapField<string, string>.Codec _map_dataRegion_codec
            = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
        private readonly pbc::MapField<string, string> dataRegion_ = new pbc::MapField<string, string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, string> DataRegion
        {
            get { return dataRegion_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ClassifyOCRResult);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ClassifyOCRResult other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (DocumentType != other.DocumentType) return false;
            if (Country != other.Country) return false;
            if (Description != other.Description) return false;
            if (!DataRegion.Equals(other.DataRegion)) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (DocumentType != 0) hash ^= DocumentType.GetHashCode();
            if (Country != 0) hash ^= Country.GetHashCode();
            if (Description.Length != 0) hash ^= Description.GetHashCode();
            hash ^= DataRegion.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (DocumentType != 0)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)DocumentType);
            }
            if (Country != 0)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)Country);
            }
            if (Description.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Description);
            }
            dataRegion_.WriteTo(output, _map_dataRegion_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (DocumentType != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)DocumentType);
            }
            if (Country != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Country);
            }
            if (Description.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
            }
            size += dataRegion_.CalculateSize(_map_dataRegion_codec);
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ClassifyOCRResult other)
        {
            if (other == null)
            {
                return;
            }
            if (other.DocumentType != 0)
            {
                DocumentType = other.DocumentType;
            }
            if (other.Country != 0)
            {
                Country = other.Country;
            }
            if (other.Description.Length != 0)
            {
                Description = other.Description;
            }
            dataRegion_.Add(other.dataRegion_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                        {
                            documentType_ = (global::Com.Paycasso.Divacs.Protocol.DocumentType)input.ReadEnum();
                            break;
                        }
                    case 16:
                        {
                            country_ = (global::Com.Paycasso.Divacs.Protocol.Country)input.ReadEnum();
                            break;
                        }
                    case 26:
                        {
                            Description = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            dataRegion_.AddEntriesFrom(input, _map_dataRegion_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class StartTransactionRequest : pb::IMessage<StartTransactionRequest>
    {
        private static readonly pb::MessageParser<StartTransactionRequest> _parser = new pb::MessageParser<StartTransactionRequest>(() => new StartTransactionRequest());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StartTransactionRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StartTransactionRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StartTransactionRequest(StartTransactionRequest other) : this()
        {
            totalNumberOfParts_ = other.totalNumberOfParts_;
            callbackUri_ = other.callbackUri_;
            FirstPart = other.firstPart_ != null ? other.FirstPart.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StartTransactionRequest Clone()
        {
            return new StartTransactionRequest(this);
        }

        /// <summary>Field number for the "total_number_of_parts" field.</summary>
        public const int TotalNumberOfPartsFieldNumber = 2;
        private int totalNumberOfParts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TotalNumberOfParts
        {
            get { return totalNumberOfParts_; }
            set
            {
                totalNumberOfParts_ = value;
            }
        }

        /// <summary>Field number for the "callback_uri" field.</summary>
        public const int CallbackUriFieldNumber = 3;
        private string callbackUri_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CallbackUri
        {
            get { return callbackUri_; }
            set
            {
                callbackUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "first_part" field.</summary>
        public const int FirstPartFieldNumber = 4;
        private global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest firstPart_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest FirstPart
        {
            get { return firstPart_; }
            set
            {
                firstPart_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as StartTransactionRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StartTransactionRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (TotalNumberOfParts != other.TotalNumberOfParts) return false;
            if (CallbackUri != other.CallbackUri) return false;
            if (!object.Equals(FirstPart, other.FirstPart)) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (TotalNumberOfParts != 0) hash ^= TotalNumberOfParts.GetHashCode();
            if (CallbackUri.Length != 0) hash ^= CallbackUri.GetHashCode();
            if (firstPart_ != null) hash ^= FirstPart.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (TotalNumberOfParts != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(TotalNumberOfParts);
            }
            if (CallbackUri.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(CallbackUri);
            }
            if (firstPart_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(FirstPart);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (TotalNumberOfParts != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNumberOfParts);
            }
            if (CallbackUri.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CallbackUri);
            }
            if (firstPart_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirstPart);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StartTransactionRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.TotalNumberOfParts != 0)
            {
                TotalNumberOfParts = other.TotalNumberOfParts;
            }
            if (other.CallbackUri.Length != 0)
            {
                CallbackUri = other.CallbackUri;
            }
            if (other.firstPart_ != null)
            {
                if (firstPart_ == null)
                {
                    firstPart_ = new global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest();
                }
                FirstPart.MergeFrom(other.FirstPart);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 16:
                        {
                            TotalNumberOfParts = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            CallbackUri = input.ReadString();
                            break;
                        }
                    case 34:
                        {
                            if (firstPart_ == null)
                            {
                                firstPart_ = new global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest();
                            }
                            input.ReadMessage(firstPart_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ProcessDocumentPartRequest : pb::IMessage<ProcessDocumentPartRequest>
    {
        private static readonly pb::MessageParser<ProcessDocumentPartRequest> _parser = new pb::MessageParser<ProcessDocumentPartRequest>(() => new ProcessDocumentPartRequest());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessDocumentPartRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessDocumentPartRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessDocumentPartRequest(ProcessDocumentPartRequest other) : this()
        {
            part_ = other.part_;
            image_ = other.image_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessDocumentPartRequest Clone()
        {
            return new ProcessDocumentPartRequest(this);
        }

        /// <summary>Field number for the "part" field.</summary>
        public const int PartFieldNumber = 2;
        private int part_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Part
        {
            get { return part_; }
            set
            {
                part_ = value;
            }
        }

        /// <summary>Field number for the "image" field.</summary>
        public const int ImageFieldNumber = 3;
        private string image_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Image
        {
            get { return image_; }
            set
            {
                image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ProcessDocumentPartRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessDocumentPartRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Part != other.Part) return false;
            if (Image != other.Image) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Part != 0) hash ^= Part.GetHashCode();
            if (Image.Length != 0) hash ^= Image.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Part != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Part);
            }
            if (Image.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Image);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Part != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Part);
            }
            if (Image.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessDocumentPartRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Part != 0)
            {
                Part = other.Part;
            }
            if (other.Image.Length != 0)
            {
                Image = other.Image;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 16:
                        {
                            Part = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            Image = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ProcessDocumentResponse : pb::IMessage<ProcessDocumentResponse>
    {
        private static readonly pb::MessageParser<ProcessDocumentResponse> _parser = new pb::MessageParser<ProcessDocumentResponse>(() => new ProcessDocumentResponse());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProcessDocumentResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessDocumentResponse()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessDocumentResponse(ProcessDocumentResponse other) : this()
        {
            Classification = other.classification_ != null ? other.Classification.Clone() : null;
            Data = other.data_ != null ? other.Data.Clone() : null;
            Warnings = other.warnings_ != null ? other.Warnings.Clone() : null;
            Rejections = other.rejections_ != null ? other.Rejections.Clone() : null;
            DomesticWarnings = other.domesticWarnings_ != null ? other.DomesticWarnings.Clone() : null;
            callbackUri_ = other.callbackUri_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProcessDocumentResponse Clone()
        {
            return new ProcessDocumentResponse(this);
        }

        /// <summary>Field number for the "classification" field.</summary>
        public const int ClassificationFieldNumber = 2;
        private global::Com.Paycasso.Divacs.Protocol.Classification classification_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.Classification Classification
        {
            get { return classification_; }
            set
            {
                classification_ = value;
            }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 3;
        private global::Com.Paycasso.Divacs.Protocol.DocumentData data_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.DocumentData Data
        {
            get { return data_; }
            set
            {
                data_ = value;
            }
        }

        /// <summary>Field number for the "warnings" field.</summary>
        public const int WarningsFieldNumber = 4;
        private global::Com.Paycasso.Divacs.Protocol.DocumentCodes warnings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.DocumentCodes Warnings
        {
            get { return warnings_; }
            set
            {
                warnings_ = value;
            }
        }

        /// <summary>Field number for the "rejections" field.</summary>
        public const int RejectionsFieldNumber = 6;
        private global::Com.Paycasso.Divacs.Protocol.DocumentCodes rejections_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.DocumentCodes Rejections
        {
            get { return rejections_; }
            set
            {
                rejections_ = value;
            }
        }

        /// <summary>Field number for the "domestic_warnings" field.</summary>
        public const int DomesticWarningsFieldNumber = 7;
        private global::Com.Paycasso.Divacs.Protocol.DocumentCodes domesticWarnings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.DocumentCodes DomesticWarnings
        {
            get { return domesticWarnings_; }
            set
            {
                domesticWarnings_ = value;
            }
        }

        /// <summary>Field number for the "callback_uri" field.</summary>
        public const int CallbackUriFieldNumber = 5;
        private string callbackUri_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CallbackUri
        {
            get { return callbackUri_; }
            set
            {
                callbackUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ProcessDocumentResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProcessDocumentResponse other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Classification, other.Classification)) return false;
            if (!object.Equals(Data, other.Data)) return false;
            if (!object.Equals(Warnings, other.Warnings)) return false;
            if (!object.Equals(Rejections, other.Rejections)) return false;
            if (!object.Equals(DomesticWarnings, other.DomesticWarnings)) return false;
            if (CallbackUri != other.CallbackUri) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (classification_ != null) hash ^= Classification.GetHashCode();
            if (data_ != null) hash ^= Data.GetHashCode();
            if (warnings_ != null) hash ^= Warnings.GetHashCode();
            if (rejections_ != null) hash ^= Rejections.GetHashCode();
            if (domesticWarnings_ != null) hash ^= DomesticWarnings.GetHashCode();
            if (CallbackUri.Length != 0) hash ^= CallbackUri.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (classification_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Classification);
            }
            if (data_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Data);
            }
            if (warnings_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(Warnings);
            }
            if (CallbackUri.Length != 0)
            {
                output.WriteRawTag(42);
                output.WriteString(CallbackUri);
            }
            if (rejections_ != null)
            {
                output.WriteRawTag(50);
                output.WriteMessage(Rejections);
            }
            if (domesticWarnings_ != null)
            {
                output.WriteRawTag(58);
                output.WriteMessage(DomesticWarnings);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (classification_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Classification);
            }
            if (data_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
            }
            if (warnings_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Warnings);
            }
            if (rejections_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rejections);
            }
            if (domesticWarnings_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DomesticWarnings);
            }
            if (CallbackUri.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CallbackUri);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProcessDocumentResponse other)
        {
            if (other == null)
            {
                return;
            }
            if (other.classification_ != null)
            {
                if (classification_ == null)
                {
                    classification_ = new global::Com.Paycasso.Divacs.Protocol.Classification();
                }
                Classification.MergeFrom(other.Classification);
            }
            if (other.data_ != null)
            {
                if (data_ == null)
                {
                    data_ = new global::Com.Paycasso.Divacs.Protocol.DocumentData();
                }
                Data.MergeFrom(other.Data);
            }
            if (other.warnings_ != null)
            {
                if (warnings_ == null)
                {
                    warnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
                }
                Warnings.MergeFrom(other.Warnings);
            }
            if (other.rejections_ != null)
            {
                if (rejections_ == null)
                {
                    rejections_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
                }
                Rejections.MergeFrom(other.Rejections);
            }
            if (other.domesticWarnings_ != null)
            {
                if (domesticWarnings_ == null)
                {
                    domesticWarnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
                }
                DomesticWarnings.MergeFrom(other.DomesticWarnings);
            }
            if (other.CallbackUri.Length != 0)
            {
                CallbackUri = other.CallbackUri;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 18:
                        {
                            if (classification_ == null)
                            {
                                classification_ = new global::Com.Paycasso.Divacs.Protocol.Classification();
                            }
                            input.ReadMessage(classification_);
                            break;
                        }
                    case 26:
                        {
                            if (data_ == null)
                            {
                                data_ = new global::Com.Paycasso.Divacs.Protocol.DocumentData();
                            }
                            input.ReadMessage(data_);
                            break;
                        }
                    case 34:
                        {
                            if (warnings_ == null)
                            {
                                warnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
                            }
                            input.ReadMessage(warnings_);
                            break;
                        }
                    case 42:
                        {
                            CallbackUri = input.ReadString();
                            break;
                        }
                    case 50:
                        {
                            if (rejections_ == null)
                            {
                                rejections_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
                            }
                            input.ReadMessage(rejections_);
                            break;
                        }
                    case 58:
                        {
                            if (domesticWarnings_ == null)
                            {
                                domesticWarnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
                            }
                            input.ReadMessage(domesticWarnings_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class DocumentData : pb::IMessage<DocumentData>
    {
        private static readonly pb::MessageParser<DocumentData> _parser = new pb::MessageParser<DocumentData>(() => new DocumentData());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DocumentData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentData()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentData(DocumentData other) : this()
        {
            source_ = other.source_;
            fields_ = other.fields_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentData Clone()
        {
            return new DocumentData(this);
        }

        /// <summary>Field number for the "source" field.</summary>
        public const int SourceFieldNumber = 1;
        private string source_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Source
        {
            get { return source_; }
            set
            {
                source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "fields" field.</summary>
        public const int FieldsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Com.Paycasso.Divacs.Protocol.DataField> _repeated_fields_codec
            = pb::FieldCodec.ForMessage(18, global::Com.Paycasso.Divacs.Protocol.DataField.Parser);
        private readonly pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DataField> fields_ = new pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DataField>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DataField> Fields
        {
            get { return fields_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DocumentData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DocumentData other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Source != other.Source) return false;
            if (!fields_.Equals(other.fields_)) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Source.Length != 0) hash ^= Source.GetHashCode();
            hash ^= fields_.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Source.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Source);
            }
            fields_.WriteTo(output, _repeated_fields_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Source.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
            }
            size += fields_.CalculateSize(_repeated_fields_codec);
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DocumentData other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Source.Length != 0)
            {
                Source = other.Source;
            }
            fields_.Add(other.fields_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Source = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            fields_.AddEntriesFrom(input, _repeated_fields_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class DataField : pb::IMessage<DataField>
    {
        private static readonly pb::MessageParser<DataField> _parser = new pb::MessageParser<DataField>(() => new DataField());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DataField> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataField()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataField(DataField other) : this()
        {
            value_ = other.value_;
            tags_ = other.tags_.Clone();
            name_ = other.name_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DataField Clone()
        {
            return new DataField(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value
        {
            get { return value_; }
            set
            {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "tags" field.</summary>
        public const int TagsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Com.Paycasso.Divacs.Protocol.Tag> _repeated_tags_codec
            = pb::FieldCodec.ForEnum(18, x => (int)x, x => (global::Com.Paycasso.Divacs.Protocol.Tag)x);
        private readonly pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.Tag> tags_ = new pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.Tag>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.Tag> Tags
        {
            get { return tags_; }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DataField);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DataField other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Value != other.Value) return false;
            if (!tags_.Equals(other.tags_)) return false;
            if (Name != other.Name) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Value.Length != 0) hash ^= Value.GetHashCode();
            hash ^= tags_.GetHashCode();
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Value.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Value);
            }
            tags_.WriteTo(output, _repeated_tags_codec);
            if (Name.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Name);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Value.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
            }
            size += tags_.CalculateSize(_repeated_tags_codec);
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DataField other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Value.Length != 0)
            {
                Value = other.Value;
            }
            tags_.Add(other.tags_);
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Value = input.ReadString();
                            break;
                        }
                    case 18:
                    case 16:
                        {
                            tags_.AddEntriesFrom(input, _repeated_tags_codec);
                            break;
                        }
                    case 26:
                        {
                            Name = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class DocumentCodes : pb::IMessage<DocumentCodes>
    {
        private static readonly pb::MessageParser<DocumentCodes> _parser = new pb::MessageParser<DocumentCodes>(() => new DocumentCodes());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DocumentCodes> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentCodes()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentCodes(DocumentCodes other) : this()
        {
            codes_ = other.codes_.Clone();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentCodes Clone()
        {
            return new DocumentCodes(this);
        }

        /// <summary>Field number for the "codes" field.</summary>
        public const int CodesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Com.Paycasso.Divacs.Protocol.DocumentCode> _repeated_codes_codec
            = pb::FieldCodec.ForMessage(10, global::Com.Paycasso.Divacs.Protocol.DocumentCode.Parser);
        private readonly pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DocumentCode> codes_ = new pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DocumentCode>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DocumentCode> Codes
        {
            get { return codes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DocumentCodes);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DocumentCodes other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!codes_.Equals(other.codes_)) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            hash ^= codes_.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            codes_.WriteTo(output, _repeated_codes_codec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            size += codes_.CalculateSize(_repeated_codes_codec);
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DocumentCodes other)
        {
            if (other == null)
            {
                return;
            }
            codes_.Add(other.codes_);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            codes_.AddEntriesFrom(input, _repeated_codes_codec);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class DocumentCode : pb::IMessage<DocumentCode>
    {
        private static readonly pb::MessageParser<DocumentCode> _parser = new pb::MessageParser<DocumentCode>(() => new DocumentCode());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DocumentCode> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentCode()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentCode(DocumentCode other) : this()
        {
            code_ = other.code_;
            name_ = other.name_;
            description_ = other.description_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DocumentCode Clone()
        {
            return new DocumentCode(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private int code_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Code
        {
            get { return code_; }
            set
            {
                code_ = value;
            }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name
        {
            get { return name_; }
            set
            {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description
        {
            get { return description_; }
            set
            {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as DocumentCode);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DocumentCode other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Code != other.Code) return false;
            if (Name != other.Name) return false;
            if (Description != other.Description) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Code != 0) hash ^= Code.GetHashCode();
            if (Name.Length != 0) hash ^= Name.GetHashCode();
            if (Description.Length != 0) hash ^= Description.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Code != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Code);
            }
            if (Name.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Name);
            }
            if (Description.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Description);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Code != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
            }
            if (Name.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
            }
            if (Description.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DocumentCode other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Code != 0)
            {
                Code = other.Code;
            }
            if (other.Name.Length != 0)
            {
                Name = other.Name;
            }
            if (other.Description.Length != 0)
            {
                Description = other.Description;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                        {
                            Code = input.ReadInt32();
                            break;
                        }
                    case 18:
                        {
                            Name = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Description = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Classification : pb::IMessage<Classification>
    {
        private static readonly pb::MessageParser<Classification> _parser = new pb::MessageParser<Classification>(() => new Classification());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Classification> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Classification()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Classification(Classification other) : this()
        {
            switch (other.ValueCase)
            {
                case ValueOneofCase.Icao:
                    Icao = other.Icao.Clone();
                    break;
                case ValueOneofCase.Unclassified:
                    Unclassified = other.Unclassified.Clone();
                    break;
                case ValueOneofCase.Secondary:
                    Secondary = other.Secondary.Clone();
                    break;
            }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Classification Clone()
        {
            return new Classification(this);
        }

        /// <summary>Field number for the "icao" field.</summary>
        public const int IcaoFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.ICAODocument Icao
        {
            get { return valueCase_ == ValueOneofCase.Icao ? (global::Com.Paycasso.Divacs.Protocol.ICAODocument)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Icao;
            }
        }

        /// <summary>Field number for the "unclassified" field.</summary>
        public const int UnclassifiedFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.Unclassified Unclassified
        {
            get { return valueCase_ == ValueOneofCase.Unclassified ? (global::Com.Paycasso.Divacs.Protocol.Unclassified)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Unclassified;
            }
        }

        /// <summary>Field number for the "secondary" field.</summary>
        public const int SecondaryFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.SecondaryDocument Secondary
        {
            get { return valueCase_ == ValueOneofCase.Secondary ? (global::Com.Paycasso.Divacs.Protocol.SecondaryDocument)value_ : null; }
            set
            {
                value_ = value;
                valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Secondary;
            }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase
        {
            None = 0,
            Icao = 1,
            Unclassified = 2,
            Secondary = 3,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ValueOneofCase ValueCase
        {
            get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue()
        {
            valueCase_ = ValueOneofCase.None;
            value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Classification);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Classification other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (!object.Equals(Icao, other.Icao)) return false;
            if (!object.Equals(Unclassified, other.Unclassified)) return false;
            if (!object.Equals(Secondary, other.Secondary)) return false;
            if (ValueCase != other.ValueCase) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (valueCase_ == ValueOneofCase.Icao) hash ^= Icao.GetHashCode();
            if (valueCase_ == ValueOneofCase.Unclassified) hash ^= Unclassified.GetHashCode();
            if (valueCase_ == ValueOneofCase.Secondary) hash ^= Secondary.GetHashCode();
            hash ^= (int)valueCase_;
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (valueCase_ == ValueOneofCase.Icao)
            {
                output.WriteRawTag(10);
                output.WriteMessage(Icao);
            }
            if (valueCase_ == ValueOneofCase.Unclassified)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Unclassified);
            }
            if (valueCase_ == ValueOneofCase.Secondary)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Secondary);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (valueCase_ == ValueOneofCase.Icao)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Icao);
            }
            if (valueCase_ == ValueOneofCase.Unclassified)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unclassified);
            }
            if (valueCase_ == ValueOneofCase.Secondary)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Secondary);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Classification other)
        {
            if (other == null)
            {
                return;
            }
            switch (other.ValueCase)
            {
                case ValueOneofCase.Icao:
                    Icao = other.Icao;
                    break;
                case ValueOneofCase.Unclassified:
                    Unclassified = other.Unclassified;
                    break;
                case ValueOneofCase.Secondary:
                    Secondary = other.Secondary;
                    break;
            }

        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            global::Com.Paycasso.Divacs.Protocol.ICAODocument subBuilder = new global::Com.Paycasso.Divacs.Protocol.ICAODocument();
                            if (valueCase_ == ValueOneofCase.Icao)
                            {
                                subBuilder.MergeFrom(Icao);
                            }
                            input.ReadMessage(subBuilder);
                            Icao = subBuilder;
                            break;
                        }
                    case 18:
                        {
                            global::Com.Paycasso.Divacs.Protocol.Unclassified subBuilder = new global::Com.Paycasso.Divacs.Protocol.Unclassified();
                            if (valueCase_ == ValueOneofCase.Unclassified)
                            {
                                subBuilder.MergeFrom(Unclassified);
                            }
                            input.ReadMessage(subBuilder);
                            Unclassified = subBuilder;
                            break;
                        }
                    case 26:
                        {
                            global::Com.Paycasso.Divacs.Protocol.SecondaryDocument subBuilder = new global::Com.Paycasso.Divacs.Protocol.SecondaryDocument();
                            if (valueCase_ == ValueOneofCase.Secondary)
                            {
                                subBuilder.MergeFrom(Secondary);
                            }
                            input.ReadMessage(subBuilder);
                            Secondary = subBuilder;
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ICAODocument : pb::IMessage<ICAODocument>
    {
        private static readonly pb::MessageParser<ICAODocument> _parser = new pb::MessageParser<ICAODocument>(() => new ICAODocument());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ICAODocument> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ICAODocument()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ICAODocument(ICAODocument other) : this()
        {
            documentType_ = other.documentType_;
            country_ = other.country_;
            description_ = other.description_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ICAODocument Clone()
        {
            return new ICAODocument(this);
        }

        /// <summary>Field number for the "document_type" field.</summary>
        public const int DocumentTypeFieldNumber = 1;
        private global::Com.Paycasso.Divacs.Protocol.DocumentType documentType_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.DocumentType DocumentType
        {
            get { return documentType_; }
            set
            {
                documentType_ = value;
            }
        }

        /// <summary>Field number for the "country" field.</summary>
        public const int CountryFieldNumber = 2;
        private global::Com.Paycasso.Divacs.Protocol.Country country_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.Country Country
        {
            get { return country_; }
            set
            {
                country_ = value;
            }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description
        {
            get { return description_; }
            set
            {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ICAODocument);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ICAODocument other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (DocumentType != other.DocumentType) return false;
            if (Country != other.Country) return false;
            if (Description != other.Description) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (DocumentType != 0) hash ^= DocumentType.GetHashCode();
            if (Country != 0) hash ^= Country.GetHashCode();
            if (Description.Length != 0) hash ^= Description.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (DocumentType != 0)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)DocumentType);
            }
            if (Country != 0)
            {
                output.WriteRawTag(16);
                output.WriteEnum((int)Country);
            }
            if (Description.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Description);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (DocumentType != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)DocumentType);
            }
            if (Country != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Country);
            }
            if (Description.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ICAODocument other)
        {
            if (other == null)
            {
                return;
            }
            if (other.DocumentType != 0)
            {
                DocumentType = other.DocumentType;
            }
            if (other.Country != 0)
            {
                Country = other.Country;
            }
            if (other.Description.Length != 0)
            {
                Description = other.Description;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                        {
                            documentType_ = (global::Com.Paycasso.Divacs.Protocol.DocumentType)input.ReadEnum();
                            break;
                        }
                    case 16:
                        {
                            country_ = (global::Com.Paycasso.Divacs.Protocol.Country)input.ReadEnum();
                            break;
                        }
                    case 26:
                        {
                            Description = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Unclassified : pb::IMessage<Unclassified>
    {
        private static readonly pb::MessageParser<Unclassified> _parser = new pb::MessageParser<Unclassified>(() => new Unclassified());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Unclassified> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Unclassified()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Unclassified(Unclassified other) : this()
        {
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Unclassified Clone()
        {
            return new Unclassified(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Unclassified);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Unclassified other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Unclassified other)
        {
            if (other == null)
            {
                return;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                }
            }
        }

    }

    public sealed partial class ServerFailure : pb::IMessage<ServerFailure>
    {
        private static readonly pb::MessageParser<ServerFailure> _parser = new pb::MessageParser<ServerFailure>(() => new ServerFailure());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ServerFailure> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerFailure()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerFailure(ServerFailure other) : this()
        {
            message_ = other.message_;
            throwableAsString_ = other.throwableAsString_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerFailure Clone()
        {
            return new ServerFailure(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message
        {
            get { return message_; }
            set
            {
                message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "throwable_as_string" field.</summary>
        public const int ThrowableAsStringFieldNumber = 2;
        private string throwableAsString_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ThrowableAsString
        {
            get { return throwableAsString_; }
            set
            {
                throwableAsString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ServerFailure);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ServerFailure other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Message != other.Message) return false;
            if (ThrowableAsString != other.ThrowableAsString) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Message.Length != 0) hash ^= Message.GetHashCode();
            if (ThrowableAsString.Length != 0) hash ^= ThrowableAsString.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Message.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Message);
            }
            if (ThrowableAsString.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(ThrowableAsString);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Message.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
            }
            if (ThrowableAsString.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ThrowableAsString);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ServerFailure other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Message.Length != 0)
            {
                Message = other.Message;
            }
            if (other.ThrowableAsString.Length != 0)
            {
                ThrowableAsString = other.ThrowableAsString;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Message = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            ThrowableAsString = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class ServerSuccess : pb::IMessage<ServerSuccess>
    {
        private static readonly pb::MessageParser<ServerSuccess> _parser = new pb::MessageParser<ServerSuccess>(() => new ServerSuccess());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ServerSuccess> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerSuccess()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerSuccess(ServerSuccess other) : this()
        {
            message_ = other.message_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ServerSuccess Clone()
        {
            return new ServerSuccess(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message
        {
            get { return message_; }
            set
            {
                message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as ServerSuccess);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ServerSuccess other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Message != other.Message) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Message.Length != 0) hash ^= Message.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Message.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Message);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Message.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ServerSuccess other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Message.Length != 0)
            {
                Message = other.Message;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 10:
                        {
                            Message = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class SecondaryDocument : pb::IMessage<SecondaryDocument>
    {
        private static readonly pb::MessageParser<SecondaryDocument> _parser = new pb::MessageParser<SecondaryDocument>(() => new SecondaryDocument());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SecondaryDocument> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SecondaryDocument()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SecondaryDocument(SecondaryDocument other) : this()
        {
            country_ = other.country_;
            description_ = other.description_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SecondaryDocument Clone()
        {
            return new SecondaryDocument(this);
        }

        /// <summary>Field number for the "country" field.</summary>
        public const int CountryFieldNumber = 1;
        private global::Com.Paycasso.Divacs.Protocol.Country country_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Paycasso.Divacs.Protocol.Country Country
        {
            get { return country_; }
            set
            {
                country_ = value;
            }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description
        {
            get { return description_; }
            set
            {
                description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as SecondaryDocument);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SecondaryDocument other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Country != other.Country) return false;
            if (Description != other.Description) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Country != 0) hash ^= Country.GetHashCode();
            if (Description.Length != 0) hash ^= Description.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Country != 0)
            {
                output.WriteRawTag(8);
                output.WriteEnum((int)Country);
            }
            if (Description.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Description);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Country != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int)Country);
            }
            if (Description.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SecondaryDocument other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Country != 0)
            {
                Country = other.Country;
            }
            if (other.Description.Length != 0)
            {
                Description = other.Description;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                        {
                            country_ = (global::Com.Paycasso.Divacs.Protocol.Country)input.ReadEnum();
                            break;
                        }
                    case 18:
                        {
                            Description = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
