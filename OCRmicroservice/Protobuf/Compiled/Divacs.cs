// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: divacs.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Paycasso.Divacs.Protocol {

  /// <summary>Holder for reflection information generated from divacs.proto</summary>
  public static partial class DivacsReflection {

    #region Descriptor
    /// <summary>File descriptor for divacs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DivacsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxkaXZhY3MucHJvdG8SHGNvbS5wYXljYXNzby5kaXZhY3MucHJvdG9jb2wa",
            "GWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aDWNvdW50cnkucHJvdG8aDmRv",
            "Y3VtZW50LnByb3RvGhJsb2NhbGlzYXRpb24ucHJvdG8aFGNsYXNzaWZpY2F0",
            "aW9uLnByb3RvGg50ZW1wbGF0ZS5wcm90bxoTcmVjdGlmaWNhdGlvbi5wcm90",
            "bxoJb2NyLnByb3RvGglyb2kucHJvdG8aDmRvY2NoZWNrLnByb3RvIq8ECghF",
            "bnZlbG9wZRIWCg50cmFuc2FjdGlvbl9pZBgBIAEoCRJECgdoZWFkZXJzGAIg",
            "AygLMjMuY29tLnBheWNhc3NvLmRpdmFjcy5wcm90b2NvbC5FbnZlbG9wZS5I",
            "ZWFkZXJzRW50cnkSLgoRbG9jYWxpc2VfZG9jdW1lbnQYCiABKAsyES5Mb2Nh",
            "bGlzZURvY3VtZW50SAASLgoRY2xhc3NpZnlfZG9jdW1lbnQYCyABKAsyES5D",
            "bGFzc2lmeURvY3VtZW50SAASJAoMZ2V0X3RlbXBsYXRlGA0gASgLMgwuR2V0",
            "VGVtcGxhdGVIABIsChByZWN0aWZ5X2RvY3VtZW50GA4gASgLMhAuUmVjdGlm",
            "eURvY3VtZW50SAASJAoMb2NyX2RvY3VtZW50GA8gASgLMgwuT2NyRG9jdW1l",
            "bnRIABImCg12YWxpZGF0ZV9yb2lzGBAgASgLMg0uVmFsaWRhdGVSb2lzSAAS",
            "JQoNZ2V0X2RvY19jaGVjaxgRIAEoCzIMLkdldERvY0NoZWNrSAASOgoIcmVz",
            "cG9uc2UYMiABKAsyJi5jb20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29sLlJl",
            "c3BvbnNlSAASJQoHcGF5bG9hZBgDIAMoCzIULmdvb2dsZS5wcm90b2J1Zi5B",
            "bnkaLgoMSGVhZGVyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAFCCQoHcmVxdWVzdCIZCghSZXNwb25zZRINCgVpbmRleBgBIAEoBSLy",
            "AQoRQ2xhc3NpZnlPQ1JSZXN1bHQSJAoNZG9jdW1lbnRfdHlwZRgBIAEoDjIN",
            "LkRvY3VtZW50VHlwZRIZCgdjb3VudHJ5GAIgASgOMgguQ291bnRyeRITCgtk",
            "ZXNjcmlwdGlvbhgDIAEoCRJUCgtkYXRhX3JlZ2lvbhgEIAMoCzI/LmNvbS5w",
            "YXljYXNzby5kaXZhY3MucHJvdG9jb2wuQ2xhc3NpZnlPQ1JSZXN1bHQuRGF0",
            "YVJlZ2lvbkVudHJ5GjEKD0RhdGFSZWdpb25FbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBIpwBChdTdGFydFRyYW5zYWN0aW9uUmVxdWVz",
            "dBIdChV0b3RhbF9udW1iZXJfb2ZfcGFydHMYAiABKAUSFAoMY2FsbGJhY2tf",
            "dXJpGAMgASgJEkwKCmZpcnN0X3BhcnQYBCABKAsyOC5jb20ucGF5Y2Fzc28u",
            "ZGl2YWNzLnByb3RvY29sLlByb2Nlc3NEb2N1bWVudFBhcnRSZXF1ZXN0IjkK",
            "GlByb2Nlc3NEb2N1bWVudFBhcnRSZXF1ZXN0EgwKBHBhcnQYAiABKAUSDQoF",
            "aW1hZ2UYAyABKAki2gIKF1Byb2Nlc3NEb2N1bWVudFJlc3BvbnNlEicKDmNs",
            "YXNzaWZpY2F0aW9uGAIgASgLMg8uQ2xhc3NpZmljYXRpb24SOAoEZGF0YRgD",
            "IAEoCzIqLmNvbS5wYXljYXNzby5kaXZhY3MucHJvdG9jb2wuRG9jdW1lbnRE",
            "YXRhEj0KCHdhcm5pbmdzGAQgASgLMisuY29tLnBheWNhc3NvLmRpdmFjcy5w",
            "cm90b2NvbC5Eb2N1bWVudENvZGVzEj8KCnJlamVjdGlvbnMYBiABKAsyKy5j",
            "b20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29sLkRvY3VtZW50Q29kZXMSRgoR",
            "ZG9tZXN0aWNfd2FybmluZ3MYByABKAsyKy5jb20ucGF5Y2Fzc28uZGl2YWNz",
            "LnByb3RvY29sLkRvY3VtZW50Q29kZXMSFAoMY2FsbGJhY2tfdXJpGAUgASgJ",
            "IlcKDERvY3VtZW50RGF0YRIOCgZzb3VyY2UYASABKAkSNwoGZmllbGRzGAIg",
            "AygLMicuY29tLnBheWNhc3NvLmRpdmFjcy5wcm90b2NvbC5EYXRhRmllbGQi",
            "WQoJRGF0YUZpZWxkEg0KBXZhbHVlGAEgASgJEi8KBHRhZ3MYAiADKA4yIS5j",
            "b20ucGF5Y2Fzc28uZGl2YWNzLnByb3RvY29sLlRhZxIMCgRuYW1lGAMgASgJ",
            "IkoKDURvY3VtZW50Q29kZXMSOQoFY29kZXMYASADKAsyKi5jb20ucGF5Y2Fz",
            "c28uZGl2YWNzLnByb3RvY29sLkRvY3VtZW50Q29kZSI/CgxEb2N1bWVudENv",
            "ZGUSDAoEY29kZRgBIAEoBRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9u",
            "GAMgASgJIj0KDVNlcnZlckZhaWx1cmUSDwoHbWVzc2FnZRgBIAEoCRIbChN0",
            "aHJvd2FibGVfYXNfc3RyaW5nGAIgASgJIiAKDVNlcnZlclN1Y2Nlc3MSDwoH",
            "bWVzc2FnZRgBIAEoCSriDwoDVGFnEgoKBlBFUlNPThAAEggKBERBVEUQARII",
            "CgROQU1FEAISDQoJRlVMTF9OQU1FEAMSDgoKRklSU1RfTkFNRRAEEg0KCUxB",
            "U1RfTkFNRRAFEhEKDURBVEVfT0ZfQklSVEgQBhISCg5QTEFDRV9PRl9CSVJU",
            "SBAHEg8KC05BVElPTkFMSVRZEAgSEwoPUEVSU09OQUxfTlVNQkVSEAkSCgoG",
            "R0VOREVSEAoSIgoeTkFUSU9OQUxfSURFTlRJRklDQVRJT05fTlVNQkVSEAsS",
            "CwoHQUREUkVTUxAMEgoKBlNUUkVFVBANEgwKCFNUUkVFVF8xEA4SDAoIU1RS",
            "RUVUXzIQDxIMCghTVFJFRVRfMxAQEggKBENJVFkQERIJCgVTVEFURRASEgwK",
            "CFBPU1RDT0RFEBMSDQoJUkVTSURFTkNFEBQSDAoIRE9DVU1FTlQQFRITCg9E",
            "T0NVTUVOVF9OVU1CRVIQFhIhCh1JU1NVSU5HX1NUQVRFX09SX09SR0FOSVpB",
            "VElPThAXEhIKDkRBVEVfT0ZfRVhQSVJZEBgSEQoNREFURV9PRl9JU1NVRRAZ",
            "Eg0KCVNJR05fREFURRAaEhMKD1ZBTElEX0ZST01fREFURRAbEg8KC0NJVEla",
            "RU5TSElQEBwSDAoIUkVMSUdJT04QHRILCgdDT1VOVFJZEB4SCQoFRlJPTlQQ",
            "HxIICgRCQUNLECASCgoGTlVNQkVSECESDwoLQ0FSRF9OVU1CRVIQIhIHCgNN",
            "UloQIxIICgRNUloxECQSCAoETVJaMhAlEggKBE1SWjMQJhIPCgtDSEVDS19E",
            "SUdJVBAnEgkKBVZBTElEECgSCAoEVFlQRRApEgwKCFNVQl9UWVBFECoSDAoI",
            "T1BUSU9OQUwQKxINCglPUFRJT05BTDEQLBINCglPUFRJT05BTDIQLRIKCgZT",
            "VEFUVVMQLhIJCgVET05PUhAvEgsKB1ZFUlNJT04QMBILCgdCQVJDT0RFEDES",
            "EAoMRFlOQU1JQ19EQVRBEDISDwoLTUlERExFX05BTUUQMxIQCgxFTkRPUlNF",
            "TUVOVFMQNBITCg9QTEFDRV9PRl9CSVJUSDIQNRILCgdQQVJFTlRTEDYSEwoP",
            "Q09NTUVSQ0lBTF9DT0RFEDcSCwoHU1lNQk9MUxA4EhAKDFJFR0lTVFJBVElP",
            "ThA5EhYKEkZJUlNUX1JFR0lTVFJBVElPThA6EgcKA1JPSRBjEggKBFJPSUYQ",
            "ZBIKCgZST0lGMDEQZRIKCgZST0lGMDIQZhIKCgZST0lGMDMQZxIKCgZST0lG",
            "MDQQaBIKCgZST0lGMDUQaRIKCgZST0lGMDYQahIKCgZST0lGMDcQaxIKCgZS",
            "T0lGMDgQbBIKCgZST0lGMDkQbRIKCgZST0lGMTAQbhIKCgZST0lGMTEQbxIK",
            "CgZST0lGMTIQcBIKCgZST0lGMTMQcRIKCgZST0lGMTQQchIKCgZST0lGMTUQ",
            "cxIKCgZST0lGMTYQdBIKCgZST0lGMTcQdRIKCgZST0lGMTgQdhIKCgZST0lG",
            "MTkQdxIKCgZST0lGMjAQeBIJCgRST0lCEJYBEgsKBlJPSUIwMRCXARILCgZS",
            "T0lCMDIQmAESCwoGUk9JQjAzEJkBEgsKBlJPSUIwNBCaARILCgZST0lCMDUQ",
            "mwESCwoGUk9JQjA2EJwBEgsKBlJPSUIwNxCdARILCgZST0lCMDgQngESCwoG",
            "Uk9JQjA5EJ8BEgsKBlJPSUIxMBCgARILCgZST0lCMTEQoQESCwoGUk9JQjEy",
            "EKMBEgsKBlJPSUIxMxCkARILCgZST0lCMTQQpQESCwoGUk9JQjE1EKYBEgsK",
            "BlJPSUIxNhCnARILCgZST0lCMTcQqAESCwoGUk9JQjE4EKkBEgsKBlJPSUIx",
            "ORCqARILCgZST0lCMjAQqwESDQoITVJaX0NPREUQyAESCgoFTVJaMDEQyQES",
            "CgoFTVJaMDIQygESCgoFTVJaMDMQywESCgoFTVJaMDQQzAESCgoFTVJaMDUQ",
            "zQESCgoFTVJaMDYQzgESCgoFTVJaMDcQzwESCgoFTVJaMDgQ0AESCgoFTVJa",
            "MDkQ0QESCgoFTVJaMTAQ0gESCgoFTVJaMTEQ0wESCgoFTVJaMTIQ1AESCgoF",
            "TVJaMTMQ1QESCgoFTVJaMTQQ1gESCgoFTVJaMTUQ1wESCgoFTVJaMTYQ2AES",
            "CgoFTVJaMTcQ2QESCgoFTVJaMTgQ2gESCgoFTVJaMTkQ2wESCgoFTVJaMjAQ",
            "3AESFAoPQ09NUEFSSVNPTl9DT0RFEOgHEg0KCENPTVAwMDAxEJFOEg0KCENP",
            "TVAwMDAyEJJOEg0KCENPTVAwMDAzEJNOEg0KCENPTVAwMDA0EJROEg0KCENP",
            "TVAwMDA1EJVOEg0KCENPTVAwMDA2EJZOEg0KCENPTVAwMDA3EJdOEg0KCENP",
            "TVAwMDA4EJhOEg0KCENPTVAwMDA5EJlOEg0KCENPTVAwMDEwEJpOEg0KCENP",
            "TVAwMDExEJtOEg0KCENPTVAwMDEyEJxOEg0KCENPTVAwMDEzEJ1OEg0KCENP",
            "TVAwMDE0EJ5OEg0KCENPTVAwMDE1EJ9OEg0KCENPTVAwMDE2EKBOEg0KCENP",
            "TVAwMDE3EKFOEg0KCENPTVAwMDE4EKJOEg0KCENPTVAwMDE5EKNOEg0KB1VO",
            "S05PV04Q//8DUAFQAlADUARQBVAGUAdQCFAJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::CountryReflection.Descriptor, global::DocumentReflection.Descriptor, global::LocalisationReflection.Descriptor, global::ClassificationReflection.Descriptor, global::TemplateReflection.Descriptor, global::RectificationReflection.Descriptor, global::OcrReflection.Descriptor, global::RoiReflection.Descriptor, global::DoccheckReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Paycasso.Divacs.Protocol.Tag), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.Envelope), global::Com.Paycasso.Divacs.Protocol.Envelope.Parser, new[]{ "TransactionId", "Headers", "LocaliseDocument", "ClassifyDocument", "GetTemplate", "RectifyDocument", "OcrDocument", "ValidateRois", "GetDocCheck", "Response", "Payload" }, new[]{ "Request" }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.Response), global::Com.Paycasso.Divacs.Protocol.Response.Parser, new[]{ "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult), global::Com.Paycasso.Divacs.Protocol.ClassifyOCRResult.Parser, new[]{ "DocumentType", "Country", "Description", "DataRegion" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest), global::Com.Paycasso.Divacs.Protocol.StartTransactionRequest.Parser, new[]{ "TotalNumberOfParts", "CallbackUri", "FirstPart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest), global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest.Parser, new[]{ "Part", "Image" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse), global::Com.Paycasso.Divacs.Protocol.ProcessDocumentResponse.Parser, new[]{ "Classification", "Data", "Warnings", "Rejections", "DomesticWarnings", "CallbackUri" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DocumentData), global::Com.Paycasso.Divacs.Protocol.DocumentData.Parser, new[]{ "Source", "Fields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DataField), global::Com.Paycasso.Divacs.Protocol.DataField.Parser, new[]{ "Value", "Tags", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DocumentCodes), global::Com.Paycasso.Divacs.Protocol.DocumentCodes.Parser, new[]{ "Codes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.DocumentCode), global::Com.Paycasso.Divacs.Protocol.DocumentCode.Parser, new[]{ "Code", "Name", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ServerFailure), global::Com.Paycasso.Divacs.Protocol.ServerFailure.Parser, new[]{ "Message", "ThrowableAsString" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Paycasso.Divacs.Protocol.ServerSuccess), global::Com.Paycasso.Divacs.Protocol.ServerSuccess.Parser, new[]{ "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Tag {
    [pbr::OriginalName("PERSON")] Person = 0,
    [pbr::OriginalName("DATE")] Date = 1,
    [pbr::OriginalName("NAME")] Name = 2,
    [pbr::OriginalName("FULL_NAME")] FullName = 3,
    [pbr::OriginalName("FIRST_NAME")] FirstName = 4,
    [pbr::OriginalName("LAST_NAME")] LastName = 5,
    [pbr::OriginalName("DATE_OF_BIRTH")] DateOfBirth = 6,
    [pbr::OriginalName("PLACE_OF_BIRTH")] PlaceOfBirth = 7,
    [pbr::OriginalName("NATIONALITY")] Nationality = 8,
    [pbr::OriginalName("PERSONAL_NUMBER")] PersonalNumber = 9,
    [pbr::OriginalName("GENDER")] Gender = 10,
    [pbr::OriginalName("NATIONAL_IDENTIFICATION_NUMBER")] NationalIdentificationNumber = 11,
    [pbr::OriginalName("ADDRESS")] Address = 12,
    [pbr::OriginalName("STREET")] Street = 13,
    [pbr::OriginalName("STREET_1")] Street1 = 14,
    [pbr::OriginalName("STREET_2")] Street2 = 15,
    [pbr::OriginalName("STREET_3")] Street3 = 16,
    [pbr::OriginalName("CITY")] City = 17,
    [pbr::OriginalName("STATE")] State = 18,
    [pbr::OriginalName("POSTCODE")] Postcode = 19,
    [pbr::OriginalName("RESIDENCE")] Residence = 20,
    [pbr::OriginalName("DOCUMENT")] Document = 21,
    [pbr::OriginalName("DOCUMENT_NUMBER")] DocumentNumber = 22,
    [pbr::OriginalName("ISSUING_STATE_OR_ORGANIZATION")] IssuingStateOrOrganization = 23,
    [pbr::OriginalName("DATE_OF_EXPIRY")] DateOfExpiry = 24,
    [pbr::OriginalName("DATE_OF_ISSUE")] DateOfIssue = 25,
    [pbr::OriginalName("SIGN_DATE")] SignDate = 26,
    [pbr::OriginalName("VALID_FROM_DATE")] ValidFromDate = 27,
    [pbr::OriginalName("CITIZENSHIP")] Citizenship = 28,
    [pbr::OriginalName("RELIGION")] Religion = 29,
    [pbr::OriginalName("COUNTRY")] Country = 30,
    [pbr::OriginalName("FRONT")] Front = 31,
    [pbr::OriginalName("BACK")] Back = 32,
    [pbr::OriginalName("NUMBER")] Number = 33,
    [pbr::OriginalName("CARD_NUMBER")] CardNumber = 34,
    [pbr::OriginalName("MRZ")] Mrz = 35,
    [pbr::OriginalName("MRZ1")] Mrz1 = 36,
    [pbr::OriginalName("MRZ2")] Mrz2 = 37,
    [pbr::OriginalName("MRZ3")] Mrz3 = 38,
    [pbr::OriginalName("CHECK_DIGIT")] CheckDigit = 39,
    [pbr::OriginalName("VALID")] Valid = 40,
    [pbr::OriginalName("TYPE")] Type = 41,
    [pbr::OriginalName("SUB_TYPE")] SubType = 42,
    [pbr::OriginalName("OPTIONAL")] Optional = 43,
    [pbr::OriginalName("OPTIONAL1")] Optional1 = 44,
    [pbr::OriginalName("OPTIONAL2")] Optional2 = 45,
    [pbr::OriginalName("STATUS")] Status = 46,
    [pbr::OriginalName("DONOR")] Donor = 47,
    [pbr::OriginalName("VERSION")] Version = 48,
    [pbr::OriginalName("BARCODE")] Barcode = 49,
    [pbr::OriginalName("DYNAMIC_DATA")] DynamicData = 50,
    [pbr::OriginalName("MIDDLE_NAME")] MiddleName = 51,
    [pbr::OriginalName("ENDORSEMENTS")] Endorsements = 52,
    [pbr::OriginalName("PLACE_OF_BIRTH2")] PlaceOfBirth2 = 53,
    [pbr::OriginalName("PARENTS")] Parents = 54,
    [pbr::OriginalName("COMMERCIAL_CODE")] CommercialCode = 55,
    [pbr::OriginalName("SYMBOLS")] Symbols = 56,
    [pbr::OriginalName("REGISTRATION")] Registration = 57,
    [pbr::OriginalName("FIRST_REGISTRATION")] FirstRegistration = 58,
    [pbr::OriginalName("ROI")] Roi = 99,
    [pbr::OriginalName("ROIF")] Roif = 100,
    [pbr::OriginalName("ROIF01")] Roif01 = 101,
    [pbr::OriginalName("ROIF02")] Roif02 = 102,
    [pbr::OriginalName("ROIF03")] Roif03 = 103,
    [pbr::OriginalName("ROIF04")] Roif04 = 104,
    [pbr::OriginalName("ROIF05")] Roif05 = 105,
    [pbr::OriginalName("ROIF06")] Roif06 = 106,
    [pbr::OriginalName("ROIF07")] Roif07 = 107,
    [pbr::OriginalName("ROIF08")] Roif08 = 108,
    [pbr::OriginalName("ROIF09")] Roif09 = 109,
    [pbr::OriginalName("ROIF10")] Roif10 = 110,
    [pbr::OriginalName("ROIF11")] Roif11 = 111,
    [pbr::OriginalName("ROIF12")] Roif12 = 112,
    [pbr::OriginalName("ROIF13")] Roif13 = 113,
    [pbr::OriginalName("ROIF14")] Roif14 = 114,
    [pbr::OriginalName("ROIF15")] Roif15 = 115,
    [pbr::OriginalName("ROIF16")] Roif16 = 116,
    [pbr::OriginalName("ROIF17")] Roif17 = 117,
    [pbr::OriginalName("ROIF18")] Roif18 = 118,
    [pbr::OriginalName("ROIF19")] Roif19 = 119,
    [pbr::OriginalName("ROIF20")] Roif20 = 120,
    [pbr::OriginalName("ROIB")] Roib = 150,
    [pbr::OriginalName("ROIB01")] Roib01 = 151,
    [pbr::OriginalName("ROIB02")] Roib02 = 152,
    [pbr::OriginalName("ROIB03")] Roib03 = 153,
    [pbr::OriginalName("ROIB04")] Roib04 = 154,
    [pbr::OriginalName("ROIB05")] Roib05 = 155,
    [pbr::OriginalName("ROIB06")] Roib06 = 156,
    [pbr::OriginalName("ROIB07")] Roib07 = 157,
    [pbr::OriginalName("ROIB08")] Roib08 = 158,
    [pbr::OriginalName("ROIB09")] Roib09 = 159,
    [pbr::OriginalName("ROIB10")] Roib10 = 160,
    [pbr::OriginalName("ROIB11")] Roib11 = 161,
    [pbr::OriginalName("ROIB12")] Roib12 = 163,
    [pbr::OriginalName("ROIB13")] Roib13 = 164,
    [pbr::OriginalName("ROIB14")] Roib14 = 165,
    [pbr::OriginalName("ROIB15")] Roib15 = 166,
    [pbr::OriginalName("ROIB16")] Roib16 = 167,
    [pbr::OriginalName("ROIB17")] Roib17 = 168,
    [pbr::OriginalName("ROIB18")] Roib18 = 169,
    [pbr::OriginalName("ROIB19")] Roib19 = 170,
    [pbr::OriginalName("ROIB20")] Roib20 = 171,
    [pbr::OriginalName("MRZ_CODE")] MrzCode = 200,
    [pbr::OriginalName("MRZ01")] Mrz01 = 201,
    [pbr::OriginalName("MRZ02")] Mrz02 = 202,
    [pbr::OriginalName("MRZ03")] Mrz03 = 203,
    [pbr::OriginalName("MRZ04")] Mrz04 = 204,
    [pbr::OriginalName("MRZ05")] Mrz05 = 205,
    [pbr::OriginalName("MRZ06")] Mrz06 = 206,
    [pbr::OriginalName("MRZ07")] Mrz07 = 207,
    [pbr::OriginalName("MRZ08")] Mrz08 = 208,
    [pbr::OriginalName("MRZ09")] Mrz09 = 209,
    [pbr::OriginalName("MRZ10")] Mrz10 = 210,
    [pbr::OriginalName("MRZ11")] Mrz11 = 211,
    [pbr::OriginalName("MRZ12")] Mrz12 = 212,
    [pbr::OriginalName("MRZ13")] Mrz13 = 213,
    [pbr::OriginalName("MRZ14")] Mrz14 = 214,
    [pbr::OriginalName("MRZ15")] Mrz15 = 215,
    [pbr::OriginalName("MRZ16")] Mrz16 = 216,
    [pbr::OriginalName("MRZ17")] Mrz17 = 217,
    [pbr::OriginalName("MRZ18")] Mrz18 = 218,
    [pbr::OriginalName("MRZ19")] Mrz19 = 219,
    [pbr::OriginalName("MRZ20")] Mrz20 = 220,
    [pbr::OriginalName("COMPARISON_CODE")] ComparisonCode = 1000,
    [pbr::OriginalName("COMP0001")] Comp0001 = 10001,
    [pbr::OriginalName("COMP0002")] Comp0002 = 10002,
    [pbr::OriginalName("COMP0003")] Comp0003 = 10003,
    [pbr::OriginalName("COMP0004")] Comp0004 = 10004,
    [pbr::OriginalName("COMP0005")] Comp0005 = 10005,
    [pbr::OriginalName("COMP0006")] Comp0006 = 10006,
    [pbr::OriginalName("COMP0007")] Comp0007 = 10007,
    [pbr::OriginalName("COMP0008")] Comp0008 = 10008,
    [pbr::OriginalName("COMP0009")] Comp0009 = 10009,
    [pbr::OriginalName("COMP0010")] Comp0010 = 10010,
    [pbr::OriginalName("COMP0011")] Comp0011 = 10011,
    [pbr::OriginalName("COMP0012")] Comp0012 = 10012,
    [pbr::OriginalName("COMP0013")] Comp0013 = 10013,
    [pbr::OriginalName("COMP0014")] Comp0014 = 10014,
    [pbr::OriginalName("COMP0015")] Comp0015 = 10015,
    [pbr::OriginalName("COMP0016")] Comp0016 = 10016,
    [pbr::OriginalName("COMP0017")] Comp0017 = 10017,
    [pbr::OriginalName("COMP0018")] Comp0018 = 10018,
    [pbr::OriginalName("COMP0019")] Comp0019 = 10019,
    [pbr::OriginalName("UNKNOWN")] Unknown = 65535,
  }

  #endregion

  #region Messages
  public sealed partial class Envelope : pb::IMessage<Envelope> {
    private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope(Envelope other) : this() {
      transactionId_ = other.transactionId_;
      headers_ = other.headers_.Clone();
      payload_ = other.payload_.Clone();
      switch (other.RequestCase) {
        case RequestOneofCase.LocaliseDocument:
          LocaliseDocument = other.LocaliseDocument.Clone();
          break;
        case RequestOneofCase.ClassifyDocument:
          ClassifyDocument = other.ClassifyDocument.Clone();
          break;
        case RequestOneofCase.GetTemplate:
          GetTemplate = other.GetTemplate.Clone();
          break;
        case RequestOneofCase.RectifyDocument:
          RectifyDocument = other.RectifyDocument.Clone();
          break;
        case RequestOneofCase.OcrDocument:
          OcrDocument = other.OcrDocument.Clone();
          break;
        case RequestOneofCase.ValidateRois:
          ValidateRois = other.ValidateRois.Clone();
          break;
        case RequestOneofCase.GetDocCheck:
          GetDocCheck = other.GetDocCheck.Clone();
          break;
        case RequestOneofCase.Response:
          Response = other.Response.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope Clone() {
      return new Envelope(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private string transactionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "localise_document" field.</summary>
    public const int LocaliseDocumentFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LocaliseDocument LocaliseDocument {
      get { return requestCase_ == RequestOneofCase.LocaliseDocument ? (global::LocaliseDocument) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.LocaliseDocument;
      }
    }

    /// <summary>Field number for the "classify_document" field.</summary>
    public const int ClassifyDocumentFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClassifyDocument ClassifyDocument {
      get { return requestCase_ == RequestOneofCase.ClassifyDocument ? (global::ClassifyDocument) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ClassifyDocument;
      }
    }

    /// <summary>Field number for the "get_template" field.</summary>
    public const int GetTemplateFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GetTemplate GetTemplate {
      get { return requestCase_ == RequestOneofCase.GetTemplate ? (global::GetTemplate) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.GetTemplate;
      }
    }

    /// <summary>Field number for the "rectify_document" field.</summary>
    public const int RectifyDocumentFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RectifyDocument RectifyDocument {
      get { return requestCase_ == RequestOneofCase.RectifyDocument ? (global::RectifyDocument) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.RectifyDocument;
      }
    }

    /// <summary>Field number for the "ocr_document" field.</summary>
    public const int OcrDocumentFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OcrDocument OcrDocument {
      get { return requestCase_ == RequestOneofCase.OcrDocument ? (global::OcrDocument) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.OcrDocument;
      }
    }

    /// <summary>Field number for the "validate_rois" field.</summary>
    public const int ValidateRoisFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ValidateRois ValidateRois {
      get { return requestCase_ == RequestOneofCase.ValidateRois ? (global::ValidateRois) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ValidateRois;
      }
    }

    /// <summary>Field number for the "get_doc_check" field.</summary>
    public const int GetDocCheckFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GetDocCheck GetDocCheck {
      get { return requestCase_ == RequestOneofCase.GetDocCheck ? (global::GetDocCheck) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.GetDocCheck;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 50;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Paycasso.Divacs.Protocol.Response Response {
      get { return requestCase_ == RequestOneofCase.Response ? (global::Com.Paycasso.Divacs.Protocol.Response) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.Response;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_payload_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> payload_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Payload {
      get { return payload_; }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      LocaliseDocument = 10,
      ClassifyDocument = 11,
      GetTemplate = 13,
      RectifyDocument = 14,
      OcrDocument = 15,
      ValidateRois = 16,
      GetDocCheck = 17,
      Response = 50,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Envelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Envelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (!object.Equals(LocaliseDocument, other.LocaliseDocument)) return false;
      if (!object.Equals(ClassifyDocument, other.ClassifyDocument)) return false;
      if (!object.Equals(GetTemplate, other.GetTemplate)) return false;
      if (!object.Equals(RectifyDocument, other.RectifyDocument)) return false;
      if (!object.Equals(OcrDocument, other.OcrDocument)) return false;
      if (!object.Equals(ValidateRois, other.ValidateRois)) return false;
      if (!object.Equals(GetDocCheck, other.GetDocCheck)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if(!payload_.Equals(other.payload_)) return false;
      if (RequestCase != other.RequestCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      hash ^= Headers.GetHashCode();
      if (requestCase_ == RequestOneofCase.LocaliseDocument) hash ^= LocaliseDocument.GetHashCode();
      if (requestCase_ == RequestOneofCase.ClassifyDocument) hash ^= ClassifyDocument.GetHashCode();
      if (requestCase_ == RequestOneofCase.GetTemplate) hash ^= GetTemplate.GetHashCode();
      if (requestCase_ == RequestOneofCase.RectifyDocument) hash ^= RectifyDocument.GetHashCode();
      if (requestCase_ == RequestOneofCase.OcrDocument) hash ^= OcrDocument.GetHashCode();
      if (requestCase_ == RequestOneofCase.ValidateRois) hash ^= ValidateRois.GetHashCode();
      if (requestCase_ == RequestOneofCase.GetDocCheck) hash ^= GetDocCheck.GetHashCode();
      if (requestCase_ == RequestOneofCase.Response) hash ^= Response.GetHashCode();
      hash ^= payload_.GetHashCode();
      hash ^= (int) requestCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      headers_.WriteTo(output, _map_headers_codec);
      payload_.WriteTo(output, _repeated_payload_codec);
      if (requestCase_ == RequestOneofCase.LocaliseDocument) {
        output.WriteRawTag(82);
        output.WriteMessage(LocaliseDocument);
      }
      if (requestCase_ == RequestOneofCase.ClassifyDocument) {
        output.WriteRawTag(90);
        output.WriteMessage(ClassifyDocument);
      }
      if (requestCase_ == RequestOneofCase.GetTemplate) {
        output.WriteRawTag(106);
        output.WriteMessage(GetTemplate);
      }
      if (requestCase_ == RequestOneofCase.RectifyDocument) {
        output.WriteRawTag(114);
        output.WriteMessage(RectifyDocument);
      }
      if (requestCase_ == RequestOneofCase.OcrDocument) {
        output.WriteRawTag(122);
        output.WriteMessage(OcrDocument);
      }
      if (requestCase_ == RequestOneofCase.ValidateRois) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ValidateRois);
      }
      if (requestCase_ == RequestOneofCase.GetDocCheck) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(GetDocCheck);
      }
      if (requestCase_ == RequestOneofCase.Response) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(Response);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      if (requestCase_ == RequestOneofCase.LocaliseDocument) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocaliseDocument);
      }
      if (requestCase_ == RequestOneofCase.ClassifyDocument) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassifyDocument);
      }
      if (requestCase_ == RequestOneofCase.GetTemplate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetTemplate);
      }
      if (requestCase_ == RequestOneofCase.RectifyDocument) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RectifyDocument);
      }
      if (requestCase_ == RequestOneofCase.OcrDocument) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OcrDocument);
      }
      if (requestCase_ == RequestOneofCase.ValidateRois) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ValidateRois);
      }
      if (requestCase_ == RequestOneofCase.GetDocCheck) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetDocCheck);
      }
      if (requestCase_ == RequestOneofCase.Response) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      size += payload_.CalculateSize(_repeated_payload_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Envelope other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      headers_.Add(other.headers_);
      payload_.Add(other.payload_);
      switch (other.RequestCase) {
        case RequestOneofCase.LocaliseDocument:
          LocaliseDocument = other.LocaliseDocument;
          break;
        case RequestOneofCase.ClassifyDocument:
          ClassifyDocument = other.ClassifyDocument;
          break;
        case RequestOneofCase.GetTemplate:
          GetTemplate = other.GetTemplate;
          break;
        case RequestOneofCase.RectifyDocument:
          RectifyDocument = other.RectifyDocument;
          break;
        case RequestOneofCase.OcrDocument:
          OcrDocument = other.OcrDocument;
          break;
        case RequestOneofCase.ValidateRois:
          ValidateRois = other.ValidateRois;
          break;
        case RequestOneofCase.GetDocCheck:
          GetDocCheck = other.GetDocCheck;
          break;
        case RequestOneofCase.Response:
          Response = other.Response;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 18: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 26: {
            payload_.AddEntriesFrom(input, _repeated_payload_codec);
            break;
          }
          case 82: {
            global::LocaliseDocument subBuilder = new global::LocaliseDocument();
            if (requestCase_ == RequestOneofCase.LocaliseDocument) {
              subBuilder.MergeFrom(LocaliseDocument);
            }
            input.ReadMessage(subBuilder);
            LocaliseDocument = subBuilder;
            break;
          }
          case 90: {
            global::ClassifyDocument subBuilder = new global::ClassifyDocument();
            if (requestCase_ == RequestOneofCase.ClassifyDocument) {
              subBuilder.MergeFrom(ClassifyDocument);
            }
            input.ReadMessage(subBuilder);
            ClassifyDocument = subBuilder;
            break;
          }
          case 106: {
            global::GetTemplate subBuilder = new global::GetTemplate();
            if (requestCase_ == RequestOneofCase.GetTemplate) {
              subBuilder.MergeFrom(GetTemplate);
            }
            input.ReadMessage(subBuilder);
            GetTemplate = subBuilder;
            break;
          }
          case 114: {
            global::RectifyDocument subBuilder = new global::RectifyDocument();
            if (requestCase_ == RequestOneofCase.RectifyDocument) {
              subBuilder.MergeFrom(RectifyDocument);
            }
            input.ReadMessage(subBuilder);
            RectifyDocument = subBuilder;
            break;
          }
          case 122: {
            global::OcrDocument subBuilder = new global::OcrDocument();
            if (requestCase_ == RequestOneofCase.OcrDocument) {
              subBuilder.MergeFrom(OcrDocument);
            }
            input.ReadMessage(subBuilder);
            OcrDocument = subBuilder;
            break;
          }
          case 130: {
            global::ValidateRois subBuilder = new global::ValidateRois();
            if (requestCase_ == RequestOneofCase.ValidateRois) {
              subBuilder.MergeFrom(ValidateRois);
            }
            input.ReadMessage(subBuilder);
            ValidateRois = subBuilder;
            break;
          }
          case 138: {
            global::GetDocCheck subBuilder = new global::GetDocCheck();
            if (requestCase_ == RequestOneofCase.GetDocCheck) {
              subBuilder.MergeFrom(GetDocCheck);
            }
            input.ReadMessage(subBuilder);
            GetDocCheck = subBuilder;
            break;
          }
          case 402: {
            global::Com.Paycasso.Divacs.Protocol.Response subBuilder = new global::Com.Paycasso.Divacs.Protocol.Response();
            if (requestCase_ == RequestOneofCase.Response) {
              subBuilder.MergeFrom(Response);
            }
            input.ReadMessage(subBuilder);
            Response = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      index_ = other.index_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClassifyOCRResult : pb::IMessage<ClassifyOCRResult> {
    private static readonly pb::MessageParser<ClassifyOCRResult> _parser = new pb::MessageParser<ClassifyOCRResult>(() => new ClassifyOCRResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClassifyOCRResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassifyOCRResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassifyOCRResult(ClassifyOCRResult other) : this() {
      documentType_ = other.documentType_;
      country_ = other.country_;
      description_ = other.description_;
      dataRegion_ = other.dataRegion_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClassifyOCRResult Clone() {
      return new ClassifyOCRResult(this);
    }

    /// <summary>Field number for the "document_type" field.</summary>
    public const int DocumentTypeFieldNumber = 1;
    private global::DocumentType documentType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DocumentType DocumentType {
      get { return documentType_; }
      set {
        documentType_ = value;
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 2;
    private global::Country country_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Country Country {
      get { return country_; }
      set {
        country_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_region" field.</summary>
    public const int DataRegionFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_dataRegion_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> dataRegion_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> DataRegion {
      get { return dataRegion_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClassifyOCRResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClassifyOCRResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DocumentType != other.DocumentType) return false;
      if (Country != other.Country) return false;
      if (Description != other.Description) return false;
      if (!DataRegion.Equals(other.DataRegion)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DocumentType != 0) hash ^= DocumentType.GetHashCode();
      if (Country != 0) hash ^= Country.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= DataRegion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DocumentType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DocumentType);
      }
      if (Country != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Country);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      dataRegion_.WriteTo(output, _map_dataRegion_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DocumentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DocumentType);
      }
      if (Country != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Country);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += dataRegion_.CalculateSize(_map_dataRegion_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClassifyOCRResult other) {
      if (other == null) {
        return;
      }
      if (other.DocumentType != 0) {
        DocumentType = other.DocumentType;
      }
      if (other.Country != 0) {
        Country = other.Country;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      dataRegion_.Add(other.dataRegion_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            documentType_ = (global::DocumentType) input.ReadEnum();
            break;
          }
          case 16: {
            country_ = (global::Country) input.ReadEnum();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            dataRegion_.AddEntriesFrom(input, _map_dataRegion_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartTransactionRequest : pb::IMessage<StartTransactionRequest> {
    private static readonly pb::MessageParser<StartTransactionRequest> _parser = new pb::MessageParser<StartTransactionRequest>(() => new StartTransactionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionRequest(StartTransactionRequest other) : this() {
      totalNumberOfParts_ = other.totalNumberOfParts_;
      callbackUri_ = other.callbackUri_;
      FirstPart = other.firstPart_ != null ? other.FirstPart.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartTransactionRequest Clone() {
      return new StartTransactionRequest(this);
    }

    /// <summary>Field number for the "total_number_of_parts" field.</summary>
    public const int TotalNumberOfPartsFieldNumber = 2;
    private int totalNumberOfParts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalNumberOfParts {
      get { return totalNumberOfParts_; }
      set {
        totalNumberOfParts_ = value;
      }
    }

    /// <summary>Field number for the "callback_uri" field.</summary>
    public const int CallbackUriFieldNumber = 3;
    private string callbackUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallbackUri {
      get { return callbackUri_; }
      set {
        callbackUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_part" field.</summary>
    public const int FirstPartFieldNumber = 4;
    private global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest firstPart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest FirstPart {
      get { return firstPart_; }
      set {
        firstPart_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalNumberOfParts != other.TotalNumberOfParts) return false;
      if (CallbackUri != other.CallbackUri) return false;
      if (!object.Equals(FirstPart, other.FirstPart)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalNumberOfParts != 0) hash ^= TotalNumberOfParts.GetHashCode();
      if (CallbackUri.Length != 0) hash ^= CallbackUri.GetHashCode();
      if (firstPart_ != null) hash ^= FirstPart.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TotalNumberOfParts != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalNumberOfParts);
      }
      if (CallbackUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CallbackUri);
      }
      if (firstPart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FirstPart);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalNumberOfParts != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNumberOfParts);
      }
      if (CallbackUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallbackUri);
      }
      if (firstPart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirstPart);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.TotalNumberOfParts != 0) {
        TotalNumberOfParts = other.TotalNumberOfParts;
      }
      if (other.CallbackUri.Length != 0) {
        CallbackUri = other.CallbackUri;
      }
      if (other.firstPart_ != null) {
        if (firstPart_ == null) {
          firstPart_ = new global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest();
        }
        FirstPart.MergeFrom(other.FirstPart);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            TotalNumberOfParts = input.ReadInt32();
            break;
          }
          case 26: {
            CallbackUri = input.ReadString();
            break;
          }
          case 34: {
            if (firstPart_ == null) {
              firstPart_ = new global::Com.Paycasso.Divacs.Protocol.ProcessDocumentPartRequest();
            }
            input.ReadMessage(firstPart_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessDocumentPartRequest : pb::IMessage<ProcessDocumentPartRequest> {
    private static readonly pb::MessageParser<ProcessDocumentPartRequest> _parser = new pb::MessageParser<ProcessDocumentPartRequest>(() => new ProcessDocumentPartRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessDocumentPartRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDocumentPartRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDocumentPartRequest(ProcessDocumentPartRequest other) : this() {
      part_ = other.part_;
      image_ = other.image_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDocumentPartRequest Clone() {
      return new ProcessDocumentPartRequest(this);
    }

    /// <summary>Field number for the "part" field.</summary>
    public const int PartFieldNumber = 2;
    private int part_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Part {
      get { return part_; }
      set {
        part_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessDocumentPartRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessDocumentPartRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Part != other.Part) return false;
      if (Image != other.Image) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Part != 0) hash ^= Part.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Part != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Part);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Image);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Part != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Part);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessDocumentPartRequest other) {
      if (other == null) {
        return;
      }
      if (other.Part != 0) {
        Part = other.Part;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            Part = input.ReadInt32();
            break;
          }
          case 26: {
            Image = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessDocumentResponse : pb::IMessage<ProcessDocumentResponse> {
    private static readonly pb::MessageParser<ProcessDocumentResponse> _parser = new pb::MessageParser<ProcessDocumentResponse>(() => new ProcessDocumentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessDocumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDocumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDocumentResponse(ProcessDocumentResponse other) : this() {
      Classification = other.classification_ != null ? other.Classification.Clone() : null;
      Data = other.data_ != null ? other.Data.Clone() : null;
      Warnings = other.warnings_ != null ? other.Warnings.Clone() : null;
      Rejections = other.rejections_ != null ? other.Rejections.Clone() : null;
      DomesticWarnings = other.domesticWarnings_ != null ? other.DomesticWarnings.Clone() : null;
      callbackUri_ = other.callbackUri_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDocumentResponse Clone() {
      return new ProcessDocumentResponse(this);
    }

    /// <summary>Field number for the "classification" field.</summary>
    public const int ClassificationFieldNumber = 2;
    private global::Classification classification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Classification Classification {
      get { return classification_; }
      set {
        classification_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private global::Com.Paycasso.Divacs.Protocol.DocumentData data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Paycasso.Divacs.Protocol.DocumentData Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "warnings" field.</summary>
    public const int WarningsFieldNumber = 4;
    private global::Com.Paycasso.Divacs.Protocol.DocumentCodes warnings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Paycasso.Divacs.Protocol.DocumentCodes Warnings {
      get { return warnings_; }
      set {
        warnings_ = value;
      }
    }

    /// <summary>Field number for the "rejections" field.</summary>
    public const int RejectionsFieldNumber = 6;
    private global::Com.Paycasso.Divacs.Protocol.DocumentCodes rejections_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Paycasso.Divacs.Protocol.DocumentCodes Rejections {
      get { return rejections_; }
      set {
        rejections_ = value;
      }
    }

    /// <summary>Field number for the "domestic_warnings" field.</summary>
    public const int DomesticWarningsFieldNumber = 7;
    private global::Com.Paycasso.Divacs.Protocol.DocumentCodes domesticWarnings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Paycasso.Divacs.Protocol.DocumentCodes DomesticWarnings {
      get { return domesticWarnings_; }
      set {
        domesticWarnings_ = value;
      }
    }

    /// <summary>Field number for the "callback_uri" field.</summary>
    public const int CallbackUriFieldNumber = 5;
    private string callbackUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallbackUri {
      get { return callbackUri_; }
      set {
        callbackUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessDocumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessDocumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Classification, other.Classification)) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(Warnings, other.Warnings)) return false;
      if (!object.Equals(Rejections, other.Rejections)) return false;
      if (!object.Equals(DomesticWarnings, other.DomesticWarnings)) return false;
      if (CallbackUri != other.CallbackUri) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (classification_ != null) hash ^= Classification.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (warnings_ != null) hash ^= Warnings.GetHashCode();
      if (rejections_ != null) hash ^= Rejections.GetHashCode();
      if (domesticWarnings_ != null) hash ^= DomesticWarnings.GetHashCode();
      if (CallbackUri.Length != 0) hash ^= CallbackUri.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (classification_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Classification);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
      if (warnings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Warnings);
      }
      if (CallbackUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CallbackUri);
      }
      if (rejections_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Rejections);
      }
      if (domesticWarnings_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DomesticWarnings);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (classification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Classification);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (warnings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Warnings);
      }
      if (rejections_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rejections);
      }
      if (domesticWarnings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DomesticWarnings);
      }
      if (CallbackUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallbackUri);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessDocumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.classification_ != null) {
        if (classification_ == null) {
          classification_ = new global::Classification();
        }
        Classification.MergeFrom(other.Classification);
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Com.Paycasso.Divacs.Protocol.DocumentData();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.warnings_ != null) {
        if (warnings_ == null) {
          warnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
        }
        Warnings.MergeFrom(other.Warnings);
      }
      if (other.rejections_ != null) {
        if (rejections_ == null) {
          rejections_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
        }
        Rejections.MergeFrom(other.Rejections);
      }
      if (other.domesticWarnings_ != null) {
        if (domesticWarnings_ == null) {
          domesticWarnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
        }
        DomesticWarnings.MergeFrom(other.DomesticWarnings);
      }
      if (other.CallbackUri.Length != 0) {
        CallbackUri = other.CallbackUri;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (classification_ == null) {
              classification_ = new global::Classification();
            }
            input.ReadMessage(classification_);
            break;
          }
          case 26: {
            if (data_ == null) {
              data_ = new global::Com.Paycasso.Divacs.Protocol.DocumentData();
            }
            input.ReadMessage(data_);
            break;
          }
          case 34: {
            if (warnings_ == null) {
              warnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
            }
            input.ReadMessage(warnings_);
            break;
          }
          case 42: {
            CallbackUri = input.ReadString();
            break;
          }
          case 50: {
            if (rejections_ == null) {
              rejections_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
            }
            input.ReadMessage(rejections_);
            break;
          }
          case 58: {
            if (domesticWarnings_ == null) {
              domesticWarnings_ = new global::Com.Paycasso.Divacs.Protocol.DocumentCodes();
            }
            input.ReadMessage(domesticWarnings_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentData : pb::IMessage<DocumentData> {
    private static readonly pb::MessageParser<DocumentData> _parser = new pb::MessageParser<DocumentData>(() => new DocumentData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentData(DocumentData other) : this() {
      source_ = other.source_;
      fields_ = other.fields_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentData Clone() {
      return new DocumentData(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Paycasso.Divacs.Protocol.DataField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Paycasso.Divacs.Protocol.DataField.Parser);
    private readonly pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DataField> fields_ = new pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DataField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DataField> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if(!fields_.Equals(other.fields_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      hash ^= fields_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentData other) {
      if (other == null) {
        return;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      fields_.Add(other.fields_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataField : pb::IMessage<DataField> {
    private static readonly pb::MessageParser<DataField> _parser = new pb::MessageParser<DataField>(() => new DataField());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataField(DataField other) : this() {
      value_ = other.value_;
      tags_ = other.tags_.Clone();
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataField Clone() {
      return new DataField(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Paycasso.Divacs.Protocol.Tag> _repeated_tags_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Com.Paycasso.Divacs.Protocol.Tag) x);
    private readonly pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.Tag> tags_ = new pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.Tag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.Tag> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataField other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      tags_.Add(other.tags_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentCodes : pb::IMessage<DocumentCodes> {
    private static readonly pb::MessageParser<DocumentCodes> _parser = new pb::MessageParser<DocumentCodes>(() => new DocumentCodes());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentCodes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentCodes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentCodes(DocumentCodes other) : this() {
      codes_ = other.codes_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentCodes Clone() {
      return new DocumentCodes(this);
    }

    /// <summary>Field number for the "codes" field.</summary>
    public const int CodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Paycasso.Divacs.Protocol.DocumentCode> _repeated_codes_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Paycasso.Divacs.Protocol.DocumentCode.Parser);
    private readonly pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DocumentCode> codes_ = new pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DocumentCode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Paycasso.Divacs.Protocol.DocumentCode> Codes {
      get { return codes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentCodes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentCodes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!codes_.Equals(other.codes_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= codes_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      codes_.WriteTo(output, _repeated_codes_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += codes_.CalculateSize(_repeated_codes_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentCodes other) {
      if (other == null) {
        return;
      }
      codes_.Add(other.codes_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            codes_.AddEntriesFrom(input, _repeated_codes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentCode : pb::IMessage<DocumentCode> {
    private static readonly pb::MessageParser<DocumentCode> _parser = new pb::MessageParser<DocumentCode>(() => new DocumentCode());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentCode(DocumentCode other) : this() {
      code_ = other.code_;
      name_ = other.name_;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentCode Clone() {
      return new DocumentCode(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentCode other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerFailure : pb::IMessage<ServerFailure> {
    private static readonly pb::MessageParser<ServerFailure> _parser = new pb::MessageParser<ServerFailure>(() => new ServerFailure());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerFailure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerFailure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerFailure(ServerFailure other) : this() {
      message_ = other.message_;
      throwableAsString_ = other.throwableAsString_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerFailure Clone() {
      return new ServerFailure(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "throwable_as_string" field.</summary>
    public const int ThrowableAsStringFieldNumber = 2;
    private string throwableAsString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThrowableAsString {
      get { return throwableAsString_; }
      set {
        throwableAsString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerFailure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerFailure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (ThrowableAsString != other.ThrowableAsString) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (ThrowableAsString.Length != 0) hash ^= ThrowableAsString.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (ThrowableAsString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ThrowableAsString);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (ThrowableAsString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThrowableAsString);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerFailure other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.ThrowableAsString.Length != 0) {
        ThrowableAsString = other.ThrowableAsString;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            ThrowableAsString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerSuccess : pb::IMessage<ServerSuccess> {
    private static readonly pb::MessageParser<ServerSuccess> _parser = new pb::MessageParser<ServerSuccess>(() => new ServerSuccess());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Paycasso.Divacs.Protocol.DivacsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerSuccess(ServerSuccess other) : this() {
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerSuccess Clone() {
      return new ServerSuccess(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerSuccess other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
