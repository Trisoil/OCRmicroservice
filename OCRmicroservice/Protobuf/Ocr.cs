// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ocr.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ocr.proto</summary>
public static partial class OcrReflection {

  #region Descriptor
  /// <summary>File descriptor for ocr.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static OcrReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CglvY3IucHJvdG8aDWNvdW50cnkucHJvdG8iYAoLT2NyRG9jdW1lbnQSDQoF",
          "aW1hZ2UYASABKAwSEAoIbGFuZ3VhZ2UYAiABKAkSGQoHY291bnRyeRgDIAEo",
          "DjIILkNvdW50cnkSFQoEcm9pcxgEIAMoCzIHLk9jclJvaSJaCgZPY3JSb2kS",
          "DAoEbmFtZRgBIAEoCRIJCgF4GAIgASgFEgkKAXkYAyABKAUSCQoBdxgEIAEo",
          "BRIJCgFoGAUgASgFEhYKBGtpbmQYBiABKA4yCC5Sb2lLaW5kInAKC09jclJl",
          "c3BvbnNlEi8KCnJvaV92YWx1ZXMYASADKAsyGy5PY3JSZXNwb25zZS5Sb2lW",
          "YWx1ZXNFbnRyeRowCg5Sb2lWYWx1ZXNFbnRyeRILCgNrZXkYASABKAkSDQoF",
          "dmFsdWUYAiABKAk6AjgBKjYKB1JvaUtpbmQSCwoHVU5LTk9XThAAEggKBFRF",
          "WFQQARIHCgNNUloQAhILCgdCQVJDT0RFEANiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::CountryReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RoiKind), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::OcrDocument), global::OcrDocument.Parser, new[]{ "Image", "Language", "Country", "Rois" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OcrRoi), global::OcrRoi.Parser, new[]{ "Name", "X", "Y", "W", "H", "Kind" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::OcrResponse), global::OcrResponse.Parser, new[]{ "RoiValues" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Enums
public enum RoiKind {
  [pbr::OriginalName("UNKNOWN")] Unknown = 0,
  [pbr::OriginalName("TEXT")] Text = 1,
  [pbr::OriginalName("MRZ")] Mrz = 2,
  [pbr::OriginalName("BARCODE")] Barcode = 3,
}

#endregion

#region Messages
public sealed partial class OcrDocument : pb::IMessage<OcrDocument> {
  private static readonly pb::MessageParser<OcrDocument> _parser = new pb::MessageParser<OcrDocument>(() => new OcrDocument());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OcrDocument> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::OcrReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrDocument() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrDocument(OcrDocument other) : this() {
    image_ = other.image_;
    language_ = other.language_;
    country_ = other.country_;
    rois_ = other.rois_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrDocument Clone() {
    return new OcrDocument(this);
  }

  /// <summary>Field number for the "image" field.</summary>
  public const int ImageFieldNumber = 1;
  private pb::ByteString image_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Image {
    get { return image_; }
    set {
      image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "language" field.</summary>
  public const int LanguageFieldNumber = 2;
  private string language_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Language {
    get { return language_; }
    set {
      language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "country" field.</summary>
  public const int CountryFieldNumber = 3;
  private global::Country country_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Country Country {
    get { return country_; }
    set {
      country_ = value;
    }
  }

  /// <summary>Field number for the "rois" field.</summary>
  public const int RoisFieldNumber = 4;
  private static readonly pb::FieldCodec<global::OcrRoi> _repeated_rois_codec
      = pb::FieldCodec.ForMessage(34, global::OcrRoi.Parser);
  private readonly pbc::RepeatedField<global::OcrRoi> rois_ = new pbc::RepeatedField<global::OcrRoi>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::OcrRoi> Rois {
    get { return rois_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OcrDocument);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OcrDocument other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Image != other.Image) return false;
    if (Language != other.Language) return false;
    if (Country != other.Country) return false;
    if(!rois_.Equals(other.rois_)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Image.Length != 0) hash ^= Image.GetHashCode();
    if (Language.Length != 0) hash ^= Language.GetHashCode();
    if (Country != 0) hash ^= Country.GetHashCode();
    hash ^= rois_.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Image.Length != 0) {
      output.WriteRawTag(10);
      output.WriteBytes(Image);
    }
    if (Language.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Language);
    }
    if (Country != 0) {
      output.WriteRawTag(24);
      output.WriteEnum((int) Country);
    }
    rois_.WriteTo(output, _repeated_rois_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Image.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
    }
    if (Language.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
    }
    if (Country != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Country);
    }
    size += rois_.CalculateSize(_repeated_rois_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OcrDocument other) {
    if (other == null) {
      return;
    }
    if (other.Image.Length != 0) {
      Image = other.Image;
    }
    if (other.Language.Length != 0) {
      Language = other.Language;
    }
    if (other.Country != 0) {
      Country = other.Country;
    }
    rois_.Add(other.rois_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Image = input.ReadBytes();
          break;
        }
        case 18: {
          Language = input.ReadString();
          break;
        }
        case 24: {
          country_ = (global::Country) input.ReadEnum();
          break;
        }
        case 34: {
          rois_.AddEntriesFrom(input, _repeated_rois_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class OcrRoi : pb::IMessage<OcrRoi> {
  private static readonly pb::MessageParser<OcrRoi> _parser = new pb::MessageParser<OcrRoi>(() => new OcrRoi());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OcrRoi> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::OcrReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrRoi() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrRoi(OcrRoi other) : this() {
    name_ = other.name_;
    x_ = other.x_;
    y_ = other.y_;
    w_ = other.w_;
    h_ = other.h_;
    kind_ = other.kind_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrRoi Clone() {
    return new OcrRoi(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private string name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Name {
    get { return name_; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 2;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 3;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "w" field.</summary>
  public const int WFieldNumber = 4;
  private int w_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int W {
    get { return w_; }
    set {
      w_ = value;
    }
  }

  /// <summary>Field number for the "h" field.</summary>
  public const int HFieldNumber = 5;
  private int h_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int H {
    get { return h_; }
    set {
      h_ = value;
    }
  }

  /// <summary>Field number for the "kind" field.</summary>
  public const int KindFieldNumber = 6;
  private global::RoiKind kind_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoiKind Kind {
    get { return kind_; }
    set {
      kind_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OcrRoi);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OcrRoi other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (W != other.W) return false;
    if (H != other.H) return false;
    if (Kind != other.Kind) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (W != 0) hash ^= W.GetHashCode();
    if (H != 0) hash ^= H.GetHashCode();
    if (Kind != 0) hash ^= Kind.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Name.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (X != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Y);
    }
    if (W != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(W);
    }
    if (H != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(H);
    }
    if (Kind != 0) {
      output.WriteRawTag(48);
      output.WriteEnum((int) Kind);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (W != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
    }
    if (H != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(H);
    }
    if (Kind != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OcrRoi other) {
    if (other == null) {
      return;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.W != 0) {
      W = other.W;
    }
    if (other.H != 0) {
      H = other.H;
    }
    if (other.Kind != 0) {
      Kind = other.Kind;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          X = input.ReadInt32();
          break;
        }
        case 24: {
          Y = input.ReadInt32();
          break;
        }
        case 32: {
          W = input.ReadInt32();
          break;
        }
        case 40: {
          H = input.ReadInt32();
          break;
        }
        case 48: {
          kind_ = (global::RoiKind) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class OcrResponse : pb::IMessage<OcrResponse> {
  private static readonly pb::MessageParser<OcrResponse> _parser = new pb::MessageParser<OcrResponse>(() => new OcrResponse());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OcrResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::OcrReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrResponse(OcrResponse other) : this() {
    roiValues_ = other.roiValues_.Clone();
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OcrResponse Clone() {
    return new OcrResponse(this);
  }

  /// <summary>Field number for the "roi_values" field.</summary>
  public const int RoiValuesFieldNumber = 1;
  private static readonly pbc::MapField<string, string>.Codec _map_roiValues_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<string, string> roiValues_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> RoiValues {
    get { return roiValues_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OcrResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OcrResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!RoiValues.Equals(other.RoiValues)) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= RoiValues.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    roiValues_.WriteTo(output, _map_roiValues_codec);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += roiValues_.CalculateSize(_map_roiValues_codec);
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OcrResponse other) {
    if (other == null) {
      return;
    }
    roiValues_.Add(other.roiValues_);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          roiValues_.AddEntriesFrom(input, _map_roiValues_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
